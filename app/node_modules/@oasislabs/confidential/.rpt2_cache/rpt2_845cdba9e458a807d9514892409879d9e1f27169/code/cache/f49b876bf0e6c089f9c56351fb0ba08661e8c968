{"map":"{\"version\":3,\"file\":\"aead.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/aead.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,KAAK,QAAQ,MAAM,UAAU,CAAC;AAErC,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AAwBzC;IAAA;IAgCA,CAAC;IA/Bc,uBAAI,GAAjB,UACE,KAAY,EACZ,SAAqB,EACrB,cAA0B,EAC1B,aAAwB,EACxB,UAAsB;;;;;4BAET,qBAAM,SAAS,CAAC,aAAa,EAAE,UAAU,CAAC,EAAA;;wBAAnD,MAAM,GAAG,SAA0C;wBACnD,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACrC,sBAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,cAAc,CAAC,EAAC;;;;KAC/D;IAEY,uBAAI,GAAjB,UACE,KAAY,EACZ,UAAsB,EACtB,cAA0B,EAC1B,aAAwB,EACxB,UAAsB;;;;;4BAET,qBAAM,SAAS,CAAC,aAAa,EAAE,UAAU,CAAC,EAAA;;wBAAnD,MAAM,GAAG,SAA0C;wBACnD,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACrC,sBAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,UAAU,EAAE,cAAc,CAAC,EAAC;;;;KAChE;IAEM,4BAAS,GAAhB;QACE,OAAO,QAAQ,CAAC,SAAS,CAAC;IAC5B,CAAC;IAEM,0BAAO,GAAd;QACE,OAAO,QAAQ,CAAC,OAAO,CAAC;IAC1B,CAAC;IACH,eAAC;AAAD,CAAC,AAhCD,IAgCC\"}","code":"import { __awaiter, __generator } from \"tslib\";\r\nimport * as deoxysii from 'deoxysii';\r\nimport { ecdhTweak } from './ecdh-tweak';\r\nvar Deoxysii = /** @class */ (function () {\r\n    function Deoxysii() {\r\n    }\r\n    Deoxysii.prototype.seal = function (nonce, plaintext, additionalData, peerPublicKey, privateKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var aesKey, aead;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, ecdhTweak(peerPublicKey, privateKey)];\r\n                    case 1:\r\n                        aesKey = _a.sent();\r\n                        aead = new deoxysii.AEAD(aesKey);\r\n                        return [2 /*return*/, aead.encrypt(nonce.bytes(), plaintext, additionalData)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Deoxysii.prototype.open = function (nonce, ciphertext, additionalData, peerPublicKey, privateKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var aesKey, aead;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, ecdhTweak(peerPublicKey, privateKey)];\r\n                    case 1:\r\n                        aesKey = _a.sent();\r\n                        aead = new deoxysii.AEAD(aesKey);\r\n                        return [2 /*return*/, aead.decrypt(nonce.bytes(), ciphertext, additionalData)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Deoxysii.prototype.nonceSize = function () {\r\n        return deoxysii.NonceSize;\r\n    };\r\n    Deoxysii.prototype.keySize = function () {\r\n        return deoxysii.KeySize;\r\n    };\r\n    return Deoxysii;\r\n}());\r\nexport { Deoxysii };\r\n//# sourceMappingURL=aead.js.map","dts":{"name":"/Users/armaniferrante/Documents/code/src/github.com/oasislabs/qwer/oasis.js/packages/confidential/dist/lib/src/aead.d.ts","writeByteOrderMark":false,"text":"import { Nonce, PublicKey, PrivateKey } from '.';\r\nexport interface Aead {\r\n    seal(nonce: Nonce, plaintext: Uint8Array, additionalData: Uint8Array, peerPublicKey: PublicKey, privateKey: PrivateKey): Promise<Uint8Array>;\r\n    open(nonce: Nonce, ciphertext: Uint8Array, additionalData: Uint8Array, peerPublicKey: PublicKey, privateKey: PrivateKey): Promise<Uint8Array>;\r\n    nonceSize(): number;\r\n    keySize(): number;\r\n}\r\nexport declare class Deoxysii implements Aead {\r\n    seal(nonce: Nonce, plaintext: Uint8Array, additionalData: Uint8Array, peerPublicKey: PublicKey, privateKey: PrivateKey): Promise<Uint8Array>;\r\n    open(nonce: Nonce, ciphertext: Uint8Array, additionalData: Uint8Array, peerPublicKey: PublicKey, privateKey: PrivateKey): Promise<Uint8Array>;\r\n    nonceSize(): number;\r\n    keySize(): number;\r\n}\r\n"}}
