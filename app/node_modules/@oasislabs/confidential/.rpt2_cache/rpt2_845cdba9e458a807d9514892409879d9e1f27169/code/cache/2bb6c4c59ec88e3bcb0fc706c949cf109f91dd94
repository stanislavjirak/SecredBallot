{"map":"{\"version\":3,\"file\":\"browser.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/ecdh-tweak/browser.ts\"],\"names\":[],\"mappings\":\";AAEA,OAAO,IAAI,MAAM,cAAc,CAAC;AAEhC,IAAI,OAAO,GAAQ,SAAS,CAAC;AAE7B,MAAM,UAAgB,SAAS,CAC7B,aAAwB,EACxB,UAAsB;;;;;;yBAElB,CAAC,OAAO,EAAR,wBAAQ;oBACA,qBAAM,WAAW,EAAE,EAAA;;oBAA7B,OAAO,GAAG,SAAmB,CAAC;;;oBAE5B,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC;oBAGjE,qBAAM,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI;wBAC1C,aAAa;wBACb,EAAE,IAAI,EAAE,MAAM,EAAE,EAChB,OAAO,EACP,YAAY,CACb,EAAA;;oBALG,MAAM,GAAG,SAKZ;oBAEG,UAAU,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC;oBAExC,8EAA8E;oBAC9E,2BAA2B;oBAC3B,aAAa;oBACb,YAAY,GAAG,SAAS,CAAC;oBACzB,MAAM,GAAG,SAAS,CAAC;oBAEnB,sBAAO,UAAU,EAAC;;;;CACnB;AAED,SAAe,WAAW;;;;YAClB,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,4BAA4B,CAAC,CAAC;YAC3E,aAAa;YACb,sBAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CACnC,KAAK,EACL,WAAW,EACX;oBACE,IAAI,EAAE,MAAM;oBACZ,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;iBAC1B,EACD,KAAK,EACL,CAAC,MAAM,CAAC,CACT,EAAC;;;CACH\"}","code":"import { __awaiter, __generator } from \"tslib\";\r\nimport nacl from '../tweetnacl';\r\nvar hmacKey = undefined;\r\nexport function ecdhTweak(peerPublicKey, privateKey) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var preMasterKey, aesKey, owndAesKey;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!!hmacKey) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, makeHmacKey()];\r\n                case 1:\r\n                    hmacKey = _a.sent();\r\n                    _a.label = 2;\r\n                case 2:\r\n                    preMasterKey = nacl.scalarMult(privateKey.bytes(), peerPublicKey.bytes());\r\n                    return [4 /*yield*/, window.crypto.subtle.sign(\r\n                        // @ts-ignore\r\n                        { name: 'HMAC' }, hmacKey, preMasterKey)];\r\n                case 3:\r\n                    aesKey = _a.sent();\r\n                    owndAesKey = new Uint8Array(aesKey);\r\n                    // Attempt to force references to be dropped since tweetnacl retains ownership\r\n                    // of the underlying array.\r\n                    // @ts-ignore\r\n                    preMasterKey = undefined;\r\n                    aesKey = undefined;\r\n                    return [2 /*return*/, owndAesKey];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction makeHmacKey() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var boxKDFTweak;\r\n        return __generator(this, function (_a) {\r\n            boxKDFTweak = new TextEncoder().encode('MRAE_Box_Deoxys-II-256-128');\r\n            // @ts-ignore\r\n            return [2 /*return*/, window.crypto.subtle.importKey('raw', boxKDFTweak, {\r\n                    name: 'HMAC',\r\n                    hash: { name: 'SHA-256' },\r\n                }, false, ['sign'])];\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=browser.js.map","dts":{"name":"/Users/armaniferrante/Documents/code/src/github.com/oasislabs/qwer/oasis.js/packages/confidential/dist/lib/src/ecdh-tweak/browser.d.ts","writeByteOrderMark":false,"text":"import { PublicKey, PrivateKey } from '..';\r\nexport declare function ecdhTweak(peerPublicKey: PublicKey, privateKey: PrivateKey): Promise<Uint8Array>;\r\n"}}
