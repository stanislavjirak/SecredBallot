{"map":"{\"version\":3,\"file\":\"oasis.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/coder/oasis.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { __awaiter, __generator } from \"tslib\";\r\nimport camelCaseKeys from 'camelcase-keys';\r\nimport { keccak256 } from 'js-sha3';\r\nimport { bytes, cbor } from '@oasislabs/common';\r\nimport ConfidentialCoder from './confidential';\r\n/**\r\n * RpcCoder encodes and decodes service rpc requests. Use the static factory methods to\r\n * construct an instance.\r\n */\r\nvar OasisCoder = /** @class */ (function () {\r\n    function OasisCoder(encoder, decoder) {\r\n        this.encoder = encoder;\r\n        this.decoder = decoder;\r\n    }\r\n    OasisCoder.prototype.encode = function (fn, args, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.encoder.encode(fn, args, options)];\r\n            });\r\n        });\r\n    };\r\n    OasisCoder.prototype.decode = function (fn, data, constructor) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.decoder.decode(fn, data, constructor)];\r\n            });\r\n        });\r\n    };\r\n    OasisCoder.prototype.decodeError = function (error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.decoder.decodeError(error)];\r\n            });\r\n        });\r\n    };\r\n    OasisCoder.prototype.functions = function (idl) {\r\n        return idl.functions;\r\n    };\r\n    OasisCoder.prototype.topic = function (event, idl) {\r\n        return '0x' + keccak256(event);\r\n    };\r\n    OasisCoder.prototype.decodeSubscriptionEvent = function (e, idl) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var event;\r\n            return __generator(this, function (_a) {\r\n                event = cbor.decode(bytes.parseHex(e.data));\r\n                return [2 /*return*/, camelCaseKeys(event, { deep: true })];\r\n            });\r\n        });\r\n    };\r\n    OasisCoder.prototype.initcode = function (idl, params, bytecode) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var constructorArgs, args, b;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        constructorArgs = idl.constructor.inputs;\r\n                        if (constructorArgs.length === 0) {\r\n                            return [2 /*return*/, bytecode];\r\n                        }\r\n                        return [4 /*yield*/, this.encode({ name: 'constructor', inputs: constructorArgs }, params || [])];\r\n                    case 1:\r\n                        args = _a.sent();\r\n                        b = bytecode;\r\n                        return [2 /*return*/, bytes.concat([b, args])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Factory method returning a confidential RpcCoder.\r\n     */\r\n    OasisCoder.confidential = function (keys) {\r\n        return new ConfidentialCoder(keys, OasisCoder.plaintext());\r\n    };\r\n    /**\r\n     * Factory method returning a non-confidential RpcCoder.\r\n     */\r\n    OasisCoder.plaintext = function () {\r\n        return new OasisCoder(new PlaintextRpcEncoder(), new PlaintextRpcDecoder());\r\n    };\r\n    return OasisCoder;\r\n}());\r\nexport { OasisCoder };\r\nvar PlaintextRpcEncoder = /** @class */ (function () {\r\n    function PlaintextRpcEncoder() {\r\n    }\r\n    PlaintextRpcEncoder.prototype.encode = function (fn, args) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var expectedLen;\r\n            return __generator(this, function (_a) {\r\n                expectedLen = fn.inputs ? fn.inputs.length : 0;\r\n                if (expectedLen !== args.length) {\r\n                    throw new Error(\"Invalid arguments \" + JSON.stringify(args));\r\n                }\r\n                // TODO: input validation. https://github.com/oasislabs/oasis-client/issues/14\r\n                if (fn.name === 'constructor') {\r\n                    return [2 /*return*/, cbor.encode(args)];\r\n                }\r\n                return [2 /*return*/, cbor.encode({\r\n                        method: fn.name,\r\n                        payload: args,\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    return PlaintextRpcEncoder;\r\n}());\r\nexport { PlaintextRpcEncoder };\r\nvar PlaintextRpcDecoder = /** @class */ (function () {\r\n    function PlaintextRpcDecoder() {\r\n    }\r\n    PlaintextRpcDecoder.prototype.decode = function (fn, data, constructor) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, cbor.decode(data)];\r\n            });\r\n        });\r\n    };\r\n    PlaintextRpcDecoder.prototype.decodeError = function (error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, bytes.decodeUtf8(error)];\r\n            });\r\n        });\r\n    };\r\n    return PlaintextRpcDecoder;\r\n}());\r\nexport { PlaintextRpcDecoder };\r\n//# sourceMappingURL=oasis.js.map","dts":{"name":"/Users/armaniferrante/Documents/code/src/github.com/oasislabs/tttt/oasis.js/packages/service/dist/lib/src/coder/oasis.d.ts","writeByteOrderMark":false,"text":"import { AeadKeys } from '@oasislabs/confidential';\r\nimport { Idl, RpcFn } from '../idl';\r\nimport { RpcCoder, RpcEncoder, RpcDecoder } from './';\r\nimport { RpcOptions } from '../oasis-gateway';\r\n/**\r\n * RpcCoder encodes and decodes service rpc requests. Use the static factory methods to\r\n * construct an instance.\r\n */\r\nexport declare class OasisCoder implements RpcCoder {\r\n    private encoder;\r\n    private decoder;\r\n    constructor(encoder: RpcEncoder, decoder: RpcDecoder);\r\n    encode(fn: RpcFn, args: any[], options?: RpcOptions): Promise<Uint8Array>;\r\n    decode(fn: RpcFn, data: Uint8Array, constructor?: boolean): Promise<any>;\r\n    decodeError(error: Uint8Array): Promise<string>;\r\n    functions(idl: Idl): RpcFn[];\r\n    topic(event: string, idl: Idl): string;\r\n    decodeSubscriptionEvent(e: any, idl: Idl): Promise<any>;\r\n    initcode(idl: Idl, params: any[], bytecode: Uint8Array): Promise<Uint8Array>;\r\n    /**\r\n     * Factory method returning a confidential RpcCoder.\r\n     */\r\n    static confidential(keys: AeadKeys): RpcCoder;\r\n    /**\r\n     * Factory method returning a non-confidential RpcCoder.\r\n     */\r\n    static plaintext(): RpcCoder;\r\n}\r\nexport declare class PlaintextRpcEncoder implements RpcEncoder {\r\n    encode(fn: RpcFn, args: any[]): Promise<Uint8Array>;\r\n}\r\nexport declare class PlaintextRpcDecoder {\r\n    decode(fn: RpcFn, data: Uint8Array, constructor?: boolean): Promise<any>;\r\n    decodeError(error: Uint8Array): Promise<string>;\r\n}\r\n"}}
