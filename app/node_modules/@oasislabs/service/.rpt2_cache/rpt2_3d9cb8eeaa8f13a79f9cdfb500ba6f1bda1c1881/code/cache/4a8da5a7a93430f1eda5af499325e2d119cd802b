{"map":"{\"version\":3,\"file\":\"confidential.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/coder/confidential.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAGL,KAAK,EACL,OAAO,EACP,OAAO,GACR,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAM1C;;GAEG;AACH;IACE,2BAAoB,IAAc,EAAU,aAAuB;QAA/C,SAAI,GAAJ,IAAI,CAAU;QAAU,kBAAa,GAAb,aAAa,CAAU;IAAG,CAAC;IAE1D,kCAAM,GAAnB,UACE,EAAS,EACT,IAAW,EACX,OAAoB;;;;;;wBAEhB,GAAG,GAAG,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC;wBAC3C,qBAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,EAAA;;wBAAzD,IAAI,GAAG,SAAkD;wBAC7D,sBAAO,OAAO,CACZ,KAAK,EAAE,EACP,IAAI,EACJ,IAAI,CAAC,IAAI,CAAC,aAAa,EACvB,IAAI,CAAC,IAAI,CAAC,SAAS,EACnB,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CACtB,EAAC;;;;KACH;IAEY,kCAAM,GAAnB,UACE,EAAS,EACT,SAAqB,EACrB,WAAqB;;;;;;wBAErB,IAAI,WAAW,EAAE;4BACf,qCAAqC;4BACrC,sBAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,EAAE,WAAW,CAAC,EAAC;yBAC9D;wBACgB,qBAAM,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAA;;wBAA3D,UAAU,GAAG,SAA8C;wBAC/D,sBAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,CAAC,SAAS,EAAE,WAAW,CAAC,EAAC;;;;KACzE;IAEY,uCAAW,GAAxB,UAAyB,KAAiB;;;;;4BACvB,qBAAM,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAA;;wBAAvD,UAAU,GAAG,SAA0C;wBAC3D,sBAAO,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,EAAC;;;;KAC7D;IAEY,oCAAQ,GAArB,UACE,GAAQ,EACR,MAAa,EACb,QAAoB;;;gBAEpB,sBAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,CAAC,EAAC;;;KAC3D;IAEM,qCAAS,GAAhB,UAAiB,GAAQ;QACvB,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC;IAEM,iCAAK,GAAZ,UAAa,KAAa,EAAE,GAAQ;QAClC,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC9C,CAAC;IAEY,mDAAuB,GAApC,UAAqC,GAAQ,EAAE,GAAQ;;;gBACrD,sBAAO,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,GAAG,EAAE,GAAG,CAAC,EAAC;;;KAC7D;IACH,wBAAC;AAAD,CAAC,AAzDD,IAyDC\"}","code":"import { __awaiter, __generator } from \"tslib\";\r\nimport { nonce, encrypt, decrypt, } from '@oasislabs/confidential';\r\nimport { bytes } from '@oasislabs/common';\r\n/**\r\n * Wraps a coder to encrypt/decrypt encoded messages in addition to coding.\r\n */\r\nvar ConfidentialCoder = /** @class */ (function () {\r\n    function ConfidentialCoder(keys, internalCoder) {\r\n        this.keys = keys;\r\n        this.internalCoder = internalCoder;\r\n    }\r\n    ConfidentialCoder.prototype.encode = function (fn, args, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var aad, data;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        aad = !options || !options.aad ? '' : options.aad;\r\n                        return [4 /*yield*/, this.internalCoder.encode(fn, args, options)];\r\n                    case 1:\r\n                        data = _a.sent();\r\n                        return [2 /*return*/, encrypt(nonce(), data, this.keys.peerPublicKey, this.keys.publicKey, this.keys.privateKey, bytes.encodeUtf8(aad))];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConfidentialCoder.prototype.decode = function (fn, encrypted, constructor) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var decryption;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (constructor) {\r\n                            // Constructor rpcs aren't encrypted.\r\n                            return [2 /*return*/, this.internalCoder.decode(fn, encrypted, constructor)];\r\n                        }\r\n                        return [4 /*yield*/, decrypt(encrypted, this.keys.privateKey)];\r\n                    case 1:\r\n                        decryption = _a.sent();\r\n                        return [2 /*return*/, this.internalCoder.decode(fn, decryption.plaintext, constructor)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConfidentialCoder.prototype.decodeError = function (error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var decryption;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, decrypt(error, this.keys.privateKey)];\r\n                    case 1:\r\n                        decryption = _a.sent();\r\n                        return [2 /*return*/, this.internalCoder.decodeError(decryption.plaintext)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConfidentialCoder.prototype.initcode = function (abi, params, bytecode) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.internalCoder.initcode(abi, params, bytecode)];\r\n            });\r\n        });\r\n    };\r\n    ConfidentialCoder.prototype.functions = function (idl) {\r\n        return this.internalCoder.functions(idl);\r\n    };\r\n    ConfidentialCoder.prototype.topic = function (event, idl) {\r\n        return this.internalCoder.topic(event, idl);\r\n    };\r\n    ConfidentialCoder.prototype.decodeSubscriptionEvent = function (log, abi) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.internalCoder.decodeSubscriptionEvent(log, abi)];\r\n            });\r\n        });\r\n    };\r\n    return ConfidentialCoder;\r\n}());\r\nexport default ConfidentialCoder;\r\n//# sourceMappingURL=confidential.js.map","dts":{"name":"/Users/armaniferrante/Documents/code/src/github.com/oasislabs/tttt/oasis.js/packages/service/dist/lib/src/coder/confidential.d.ts","writeByteOrderMark":false,"text":"import { AeadKeys } from '@oasislabs/confidential';\r\nimport { Idl, RpcFn } from '../idl';\r\nimport { RpcCoder } from './';\r\nimport { RpcOptions } from '../oasis-gateway';\r\n/**\r\n * Wraps a coder to encrypt/decrypt encoded messages in addition to coding.\r\n */\r\nexport default class ConfidentialCoder {\r\n    private keys;\r\n    private internalCoder;\r\n    constructor(keys: AeadKeys, internalCoder: RpcCoder);\r\n    encode(fn: RpcFn, args: any[], options?: RpcOptions): Promise<Uint8Array>;\r\n    decode(fn: RpcFn, encrypted: Uint8Array, constructor?: boolean): Promise<any>;\r\n    decodeError(error: Uint8Array): Promise<string>;\r\n    initcode(abi: Idl, params: any[], bytecode: Uint8Array): Promise<Uint8Array>;\r\n    functions(idl: Idl): RpcFn[];\r\n    topic(event: string, idl: Idl): string;\r\n    decodeSubscriptionEvent(log: any, abi: Idl): Promise<any>;\r\n}\r\n"}}
