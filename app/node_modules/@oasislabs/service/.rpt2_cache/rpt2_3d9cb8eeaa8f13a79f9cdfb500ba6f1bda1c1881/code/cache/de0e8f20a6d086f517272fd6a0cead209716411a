{"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/deploy/index.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { __awaiter, __generator, __spreadArrays } from \"tslib\";\r\nimport { bytes } from '@oasislabs/common';\r\nimport Service from '../service';\r\nimport { fromWasm } from '../idl';\r\nimport { defaultOasisGateway, } from '../oasis-gateway';\r\nimport { DeployHeader } from './header';\r\nimport { OasisCoder } from '../coder/oasis';\r\nimport { DeployError } from '../error';\r\n/**\r\n * deploy creates a service on the Oasis cloud.\r\n *\r\n * Expects args to be of the form: [arg1, arg2, ..., argN, options],\r\n * where argI is a positional constructor argument for the service and\r\n * the options represents the deploy options.\r\n *\r\n * `arg1`, `arg2`, ..., `argnN`: Service specific constructor args.\r\n * `options`: `_DeployOptions`.\r\n *\r\n * // Type just for documentation. Should change in line with the `DeployOptions`.\r\n * type _DeployOptions = {\r\n *  bytecode: Uint8Array | string;\r\n *  idl?: Idl;\r\n *  header?: DeployHeaderOptions;\r\n *  gateway?: OasisGateway;\r\n *  db?: Db;\r\n *  coder?: RpcCoder;\r\n *  gasLimit?: string | number;\r\n *  gasPrice?: string | number;\r\n *  value?: string | number;\r\n * };\r\n *\r\n * @returns a Service object to make rpc requests with.\r\n */\r\nexport default function deploy() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var options, data, gateway, response;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, extractOptions(args)];\r\n                case 1:\r\n                    options = _a.sent();\r\n                    return [4 /*yield*/, deployCode(options)];\r\n                case 2:\r\n                    data = _a.sent();\r\n                    gateway = oasisGateway(options);\r\n                    return [4 /*yield*/, gateway.deploy({ data: data, options: options.options })];\r\n                case 3:\r\n                    response = _a.sent();\r\n                    if (!response.address) {\r\n                        throw new DeployError(args, \"Invalid gateway response: \" + response);\r\n                    }\r\n                    return [2 /*return*/, new Service(options.idl, response.address, {\r\n                            gateway: gateway,\r\n                            db: options.db,\r\n                            coder: options.coder,\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Transforms the given unstructured array of arguments into a\r\n * DeployOptions type, throwing an error if the arguments are\r\n * malformed in any way.\r\n */\r\nfunction extractOptions(args) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var options, deployOptions;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (args.length === 0) {\r\n                        throw new DeployError(args, 'No deploy arguments provided');\r\n                    }\r\n                    options = (function () {\r\n                        // Options should be the last argument in the args array.\r\n                        var opts = args.pop();\r\n                        // Assert required options are given.\r\n                        if (!opts.bytecode) {\r\n                            throw new DeployError(__spreadArrays(args, [opts]), 'No bytecode provided');\r\n                        }\r\n                        // Convert hex-string convenience api into Uint8Array\r\n                        if (typeof opts.bytecode === 'string') {\r\n                            opts.bytecode = bytes.parseHex(opts.bytecode);\r\n                        }\r\n                        return opts;\r\n                    })();\r\n                    return [4 /*yield*/, toDeployOptions(args, options)];\r\n                case 1:\r\n                    deployOptions = _a.sent();\r\n                    validateDeployOptions(deployOptions, args);\r\n                    return [2 /*return*/, deployOptions];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Fills in any left out deploy options and converts to the required\r\n * types if necessary.\r\n */\r\nfunction toDeployOptions(args, options) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var idl, _a, rpcOptions;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    _a = options.idl;\r\n                    if (_a) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, fromWasm(options.bytecode)];\r\n                case 1:\r\n                    _a = (_b.sent());\r\n                    _b.label = 2;\r\n                case 2:\r\n                    idl = _a;\r\n                    rpcOptions = (function () {\r\n                        return {\r\n                            gasLimit: options.gasLimit,\r\n                            gasPrice: options.gasPrice,\r\n                            value: options.value,\r\n                        };\r\n                    })();\r\n                    return [2 /*return*/, {\r\n                            bytecode: options.bytecode,\r\n                            idl: idl,\r\n                            header: deployHeader(options),\r\n                            arguments: args,\r\n                            options: rpcOptions,\r\n                            gateway: options.gateway,\r\n                            db: options.db,\r\n                            coder: options.coder,\r\n                        }];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * @returns the deploy header options from the given DeployOptions,\r\n *          filling in any left out options with the default header.\r\n */\r\nfunction deployHeader(options) {\r\n    var defaultHeader = { confidential: true };\r\n    return Object.assign(defaultHeader, options.header);\r\n}\r\n/**\r\n * @returns the deployCode from the given options, i.e.,\r\n *          OASIS_HEADER || INITCODE.\r\n */\r\nfunction deployCode(options) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var code, header;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, initcode(options)];\r\n                case 1:\r\n                    code = _a.sent();\r\n                    header = deployHeader(options);\r\n                    return [2 /*return*/, DeployHeader.deployCode(header, code)];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * @returns the initcode, i.e., BYTECODE || ABI_ENCODED(args).\r\n */\r\nfunction initcode(options) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var encoder;\r\n        return __generator(this, function (_a) {\r\n            encoder = options.coder ? options.coder : OasisCoder.plaintext();\r\n            return [2 /*return*/, encoder.initcode(options.idl, options.arguments || [], options.bytecode)];\r\n        });\r\n    });\r\n}\r\n/**\r\n * @returns the gateway to use for deploying the Service.\r\n */\r\nfunction oasisGateway(options) {\r\n    return options.gateway || defaultOasisGateway();\r\n}\r\n/**\r\n * @throws if the given deployOptions are malformed.\r\n */\r\nfunction validateDeployOptions(deployOptions, args) {\r\n    if (deployOptions.header.confidential &&\r\n        (!deployOptions.options || !deployOptions.options.gasLimit)) {\r\n        throw new DeployError(args, 'gasLimit must be provided for confidential deploys');\r\n    }\r\n}\r\n//# sourceMappingURL=index.js.map","dts":{"name":"/Users/armaniferrante/Documents/code/src/github.com/oasislabs/tttt/oasis.js/packages/service/dist/lib/src/deploy/index.d.ts","writeByteOrderMark":false,"text":"import Service from '../service';\r\n/**\r\n * deploy creates a service on the Oasis cloud.\r\n *\r\n * Expects args to be of the form: [arg1, arg2, ..., argN, options],\r\n * where argI is a positional constructor argument for the service and\r\n * the options represents the deploy options.\r\n *\r\n * `arg1`, `arg2`, ..., `argnN`: Service specific constructor args.\r\n * `options`: `_DeployOptions`.\r\n *\r\n * // Type just for documentation. Should change in line with the `DeployOptions`.\r\n * type _DeployOptions = {\r\n *  bytecode: Uint8Array | string;\r\n *  idl?: Idl;\r\n *  header?: DeployHeaderOptions;\r\n *  gateway?: OasisGateway;\r\n *  db?: Db;\r\n *  coder?: RpcCoder;\r\n *  gasLimit?: string | number;\r\n *  gasPrice?: string | number;\r\n *  value?: string | number;\r\n * };\r\n *\r\n * @returns a Service object to make rpc requests with.\r\n */\r\nexport default function deploy(...args: any[]): Promise<Service>;\r\n"}}
