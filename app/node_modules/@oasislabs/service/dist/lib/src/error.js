var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { bytes } from '@oasislabs/common';
export function NO_CODE_ERROR_MSG(address) {
    return "\n    No code exists for address " + bytes.toHex(address) + ".\n    Either your address is incorrect or the deploy failed.\n  ";
}
var RpcError = /** @class */ (function (_super) {
    __extends(RpcError, _super);
    function RpcError(rpcArgs, rpcOptions) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        var _this = _super.apply(this, params) || this;
        _this.rpcArgs = rpcArgs;
        _this.rpcOptions = rpcOptions;
        return _this;
    }
    return RpcError;
}(Error));
export { RpcError };
var DeployError = /** @class */ (function (_super) {
    __extends(DeployError, _super);
    function DeployError(deployArgs) {
        var params = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            params[_i - 1] = arguments[_i];
        }
        var _this = _super.apply(this, params) || this;
        _this.deployArgs = deployArgs;
        return _this;
    }
    return DeployError;
}(Error));
export { DeployError };
var ServiceError = /** @class */ (function (_super) {
    __extends(ServiceError, _super);
    function ServiceError(address) {
        var params = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            params[_i - 1] = arguments[_i];
        }
        var _this = _super.apply(this, params) || this;
        _this.address = address;
        return _this;
    }
    return ServiceError;
}(Error));
export { ServiceError };
//# sourceMappingURL=error.js.map