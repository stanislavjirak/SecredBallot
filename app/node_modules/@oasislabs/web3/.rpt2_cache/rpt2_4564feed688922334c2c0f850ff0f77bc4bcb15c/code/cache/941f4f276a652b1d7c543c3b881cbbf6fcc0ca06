{"map":"{\"version\":3,\"file\":\"transaction.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/transaction.ts\"],\"names\":[],\"mappings\":\";AAEA,IAAM,cAAc,GAAG,KAAK,CAAC;AAE7B;IACE,4BAAoB,OAAe,EAAU,GAAY;QAArC,YAAO,GAAP,OAAO,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAS;IAAG,CAAC;IAEvD,mCAAM,GAAZ,UAAa,EAAyB;;;;;;wBACpC,6DAA6D;wBAC7D,kDAAkD;wBAClD,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;wBAEpC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE;4BACb,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC;yBACnB;wBAEG,QAAQ,GAAmB,EAAE,CAAC;wBAClC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE;4BAChB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;yBACrC;wBACD,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE;4BACb,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;yBAC7B;wBACA,qBAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAA;;wBAA5B,CAAC,SAA2B,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;4BACpC,EAAU,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;wBAC/B,CAAC,CAAC,CAAC;wBAEH,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE;4BAChB,EAAE,CAAC,QAAQ,GAAG,YAAY,CAAC;yBAC5B;wBAED,EAAE,CAAC,OAAO,GAAG,cAAc,CAAC;wBAE5B,sBAAO,EAAiB,EAAC;;;;KAC1B;IAEK,wCAAW,GAAjB,UAAkB,EAAU;;;;;;;4BAExB,GAAG,EAAE,UAAU;;wBACP,qBAAM,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;gCAC7B,MAAM,EAAE,iBAAiB;gCACzB,MAAM,EAAE,CAAC,EAAE,CAAC;6BACb,CAAC,EAAA;4BALJ,uBAEE,QAAK,GAAE,CAAC,SAGN,CAAC,CAAC,MAAM;iCACV;;;;KACH;IAEK,kCAAK,GAAX;;;;;;;4BAEI,GAAG,EAAE,OAAO;;wBACJ,qBAAM,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;gCAC7B,MAAM,EAAE,yBAAyB;gCACjC,MAAM,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC;6BACjC,CAAC,EAAA;4BALJ,uBAEE,QAAK,GAAE,CAAC,SAGN,CAAC,CAAC,MAAM;iCACV;;;;KACH;IACH,yBAAC;AAAD,CAAC,AAnDD,IAmDC\"}","code":"import { __awaiter, __generator } from \"tslib\";\r\nvar OASIS_CHAIN_ID = 42261;\r\nvar TransactionFactory = /** @class */ (function () {\r\n    function TransactionFactory(address, rpc) {\r\n        this.address = address;\r\n        this.rpc = rpc;\r\n    }\r\n    TransactionFactory.prototype.create = function (tx) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var promises;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Clone the options so that we don't mutate the array given,\r\n                        // which might be re-used by the front-end client.\r\n                        tx = JSON.parse(JSON.stringify(tx));\r\n                        if (!tx.value) {\r\n                            tx.value = '0x00';\r\n                        }\r\n                        promises = [];\r\n                        if (!tx.gasLimit) {\r\n                            promises.push(this.estimateGas(tx));\r\n                        }\r\n                        if (!tx.nonce) {\r\n                            promises.push(this.nonce());\r\n                        }\r\n                        return [4 /*yield*/, Promise.all(promises)];\r\n                    case 1:\r\n                        (_a.sent()).forEach(function (r) {\r\n                            tx[r.key] = r.value;\r\n                        });\r\n                        if (!tx.gasPrice) {\r\n                            tx.gasPrice = '0x3b9aca00';\r\n                        }\r\n                        tx.chainId = OASIS_CHAIN_ID;\r\n                        return [2 /*return*/, tx];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TransactionFactory.prototype.estimateGas = function (tx) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = {\r\n                            key: 'gasLimit'\r\n                        };\r\n                        return [4 /*yield*/, this.rpc.request({\r\n                                method: 'eth_estimateGas',\r\n                                params: [tx],\r\n                            })];\r\n                    case 1: return [2 /*return*/, (_a.value = (_b.sent()).result,\r\n                            _a)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TransactionFactory.prototype.nonce = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = {\r\n                            key: 'nonce'\r\n                        };\r\n                        return [4 /*yield*/, this.rpc.request({\r\n                                method: 'eth_getTransactionCount',\r\n                                params: [this.address, 'latest'],\r\n                            })];\r\n                    case 1: return [2 /*return*/, (_a.value = (_b.sent()).result,\r\n                            _a)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return TransactionFactory;\r\n}());\r\nexport { TransactionFactory };\r\n//# sourceMappingURL=transaction.js.map","dts":{"name":"/Users/armaniferrante/Documents/code/src/github.com/oasislabs/tttt/oasis.js/packages/web3/dist/lib/src/transaction.d.ts","writeByteOrderMark":false,"text":"import { JsonRpc } from './websocket';\r\nexport declare class TransactionFactory {\r\n    private address;\r\n    private rpc;\r\n    constructor(address: string, rpc: JsonRpc);\r\n    create(tx: UnpreparedTransaction): Promise<Transaction>;\r\n    estimateGas(tx: Object): Promise<any>;\r\n    nonce(): Promise<any>;\r\n}\r\n/**\r\n * Transaction that might need fields to be filled in, e.g., via estimateGas.\r\n */\r\nexport declare type UnpreparedTransaction = {\r\n    to?: string;\r\n    value?: string;\r\n    data?: string;\r\n    nonce?: string;\r\n    gasLimit?: string;\r\n    gasPrice?: string;\r\n    chainId?: number;\r\n};\r\nexport declare type Transaction = {\r\n    to?: string;\r\n    value: string;\r\n    data: string;\r\n    nonce: string;\r\n    gasLimit: string;\r\n    gasPrice: string;\r\n    chainId: number;\r\n};\r\n"}}
