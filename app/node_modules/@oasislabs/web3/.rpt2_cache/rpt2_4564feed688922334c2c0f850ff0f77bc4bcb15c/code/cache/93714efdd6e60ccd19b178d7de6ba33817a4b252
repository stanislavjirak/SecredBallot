{"map":"{\"version\":3,\"file\":\"gateway.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/gateway.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { __awaiter, __generator } from \"tslib\";\r\nimport { EventEmitter } from 'eventemitter3';\r\nimport { bytes, sleep } from '@oasislabs/common';\r\nimport { Web3GatewayError, TransactionReverted, RpcFailure } from './error';\r\nimport { Web3, Web3Provider } from './web3';\r\nvar Web3Gateway = /** @class */ (function () {\r\n    function Web3Gateway(url, wallet) {\r\n        this._inner = this.setupInner(url, wallet);\r\n        this.eth = this._inner.web3.eth;\r\n        this.oasis = this._inner.web3.oasis;\r\n        this.net = this._inner.web3.net;\r\n    }\r\n    Web3Gateway.prototype.setupInner = function (url, wallet) {\r\n        var web3 = new Web3(new Web3Provider(url, wallet));\r\n        var subscriptionIds = new Map();\r\n        return {\r\n            wallet: wallet,\r\n            web3: web3,\r\n            subscriptionIds: subscriptionIds,\r\n        };\r\n    };\r\n    /**\r\n     * Sanity check that the gateway is constructed with the correct url.\r\n     */\r\n    Web3Gateway.prototype.assertGatewayIsResponsive = function (url) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n            var timeout, response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        timeout = setTimeout(function () {\r\n                            reject(new Error(\"Couldn't connect to gateway \" + url));\r\n                        }, 3000);\r\n                        return [4 /*yield*/, this.net.version()];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        if (parseInt(response, 10) <= 0) {\r\n                            reject(new Error(\"Invalid gateway response \" + response));\r\n                        }\r\n                        clearTimeout(timeout);\r\n                        resolve();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    Web3Gateway.prototype.deploy = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var txParams, tx, rawTx, txHash, receipt, tries;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this._inner.wallet) {\r\n                            throw new Web3GatewayError('The Web3Gateway must have a Wallet to deploy');\r\n                        }\r\n                        txParams = Object.assign(request.options || {}, {\r\n                            data: bytes.toHex(request.data),\r\n                        });\r\n                        return [4 /*yield*/, this._inner.web3.provider.transactions.create(txParams)];\r\n                    case 1:\r\n                        tx = _a.sent();\r\n                        return [4 /*yield*/, this._inner.wallet.sign(tx)];\r\n                    case 2:\r\n                        rawTx = _a.sent();\r\n                        return [4 /*yield*/, this.eth.sendRawTransaction(rawTx)];\r\n                    case 3:\r\n                        txHash = _a.sent();\r\n                        return [4 /*yield*/, this.eth.getTransactionReceipt(txHash)];\r\n                    case 4:\r\n                        receipt = _a.sent();\r\n                        tries = 0;\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        if (!(!receipt && tries < 5)) return [3 /*break*/, 8];\r\n                        return [4 /*yield*/, sleep(1000)];\r\n                    case 6:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.eth.getTransactionReceipt(txHash)];\r\n                    case 7:\r\n                        receipt = _a.sent();\r\n                        tries += 1;\r\n                        return [3 /*break*/, 5];\r\n                    case 8:\r\n                        if (!receipt) {\r\n                            throw new RpcFailure('could not fetch the transaction receipt');\r\n                        }\r\n                        if (receipt.status !== '0x1') {\r\n                            throw new TransactionReverted(receipt, \"transaction reverted: \" + JSON.stringify(receipt, null, 2));\r\n                        }\r\n                        return [2 /*return*/, {\r\n                                address: bytes.parseHex(receipt.contractAddress),\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Web3Gateway.prototype.rpc = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var txParams, tx, rawTx, executionPayload, error;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this._inner.wallet) {\r\n                            throw new Web3GatewayError('The Web3Gateway must have a Wallet to execute an rpc');\r\n                        }\r\n                        txParams = Object.assign(request.options || {}, {\r\n                            data: bytes.toHex(request.data),\r\n                            to: bytes.toHex(request.address),\r\n                        });\r\n                        return [4 /*yield*/, this._inner.web3.provider.transactions.create(txParams)];\r\n                    case 1:\r\n                        tx = _a.sent();\r\n                        return [4 /*yield*/, this._inner.wallet.sign(tx)];\r\n                    case 2:\r\n                        rawTx = _a.sent();\r\n                        return [4 /*yield*/, this.oasis.invoke(rawTx)];\r\n                    case 3:\r\n                        executionPayload = _a.sent();\r\n                        error = undefined;\r\n                        // If the transaction reverted, throw an Error with the message given from\r\n                        // the runtime.\r\n                        if (executionPayload.status === '0x0') {\r\n                            error = bytes.parseHex(executionPayload.output);\r\n                        }\r\n                        return [2 /*return*/, {\r\n                                output: executionPayload.output,\r\n                                error: error,\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Web3Gateway.prototype.subscribe = function (request) {\r\n        return this.web3Subscribe(request.event, [\r\n            'logs',\r\n            {\r\n                address: bytes.toHex(request.filter.address),\r\n                topics: request.filter.topics,\r\n            },\r\n        ]);\r\n    };\r\n    Web3Gateway.prototype.web3Subscribe = function (eventName, params) {\r\n        var _a;\r\n        var _this = this;\r\n        var events = new EventEmitter();\r\n        (_a = this.eth).subscribe.apply(_a, params).then(function (sub) {\r\n            // Set this mapping to allow clients to `unsubscribe` with an event\r\n            // name, instead of an id.\r\n            _this._inner.subscriptionIds.set(eventName, sub.id);\r\n            // Remap web3 `data` event to the given event name.\r\n            sub.on('data', function (event) {\r\n                events.emit(eventName, event);\r\n            });\r\n        })\r\n            .catch(console.error);\r\n        return events;\r\n    };\r\n    Web3Gateway.prototype.unsubscribe = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var id;\r\n            return __generator(this, function (_a) {\r\n                id = this._inner.subscriptionIds.get(request.event);\r\n                if (!id) {\r\n                    return [2 /*return*/];\r\n                }\r\n                this._inner.subscriptionIds.delete(request.event);\r\n                return [2 /*return*/, this.eth.unsubscribe(id)];\r\n            });\r\n        });\r\n    };\r\n    Web3Gateway.prototype.publicKey = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.oasis.getPublicKey(bytes.toHex(request.address))];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        // TODO: signature validation. https://github.com/oasislabs/oasis-client/issues/39\r\n                        return [2 /*return*/, {\r\n                                publicKey: bytes.parseHex(response.public_key),\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Web3Gateway.prototype.disconnect = function () {\r\n        this._inner.web3.provider.ws.disconnect();\r\n    };\r\n    Web3Gateway.prototype.getCode = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.eth.getCode(bytes.toHex(request.address), 'latest')];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        // Note: the gateway returns '0x' for all addresses without code.\r\n                        return [2 /*return*/, {\r\n                                code: response === '0x' ? null : bytes.parseHex(response),\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // todo: https://github.com/oasislabs/oasis.js/issues/25\r\n    Web3Gateway.prototype.connectionState = function () {\r\n        return this._inner.web3.provider.ws.connectionState;\r\n    };\r\n    Web3Gateway.prototype.hasSigner = function () {\r\n        return true;\r\n    };\r\n    return Web3Gateway;\r\n}());\r\nexport default Web3Gateway;\r\n//# sourceMappingURL=gateway.js.map","dts":{"name":"/Users/armaniferrante/Documents/code/src/github.com/oasislabs/tttt/oasis.js/packages/web3/dist/lib/src/gateway.d.ts","writeByteOrderMark":false,"text":"import { OasisGateway, DeployRequest, DeployResponse, RpcRequest, RpcResponse, SubscribeRequest, UnsubscribeRequest, PublicKeyRequest, PublicKeyResponse, GetCodeRequest, GetCodeResponse } from '@oasislabs/service';\r\nimport { Transaction } from './transaction';\r\nimport { Web3Namespace } from './web3';\r\nexport default class Web3Gateway implements OasisGateway {\r\n    /**\r\n     * Private variables used to manage the gateway.\r\n     */\r\n    private _inner;\r\n    /**\r\n     * `eth_*` web3 rpc methods.\r\n     */\r\n    eth: Web3Namespace;\r\n    /**\r\n     * `oasis_*` web3 rpc methods.\r\n     */\r\n    oasis: Web3Namespace;\r\n    /**\r\n     * `net_*` web3 rpc methods.\r\n     */\r\n    net: Web3Namespace;\r\n    constructor(url: string, wallet?: Wallet);\r\n    private setupInner;\r\n    /**\r\n     * Sanity check that the gateway is constructed with the correct url.\r\n     */\r\n    private assertGatewayIsResponsive;\r\n    deploy(request: DeployRequest): Promise<DeployResponse>;\r\n    rpc(request: RpcRequest): Promise<RpcResponse>;\r\n    subscribe(request: SubscribeRequest): any;\r\n    web3Subscribe(eventName: string, params: any[]): any;\r\n    unsubscribe(request: UnsubscribeRequest): Promise<any>;\r\n    publicKey(request: PublicKeyRequest): Promise<PublicKeyResponse>;\r\n    disconnect(): void;\r\n    getCode(request: GetCodeRequest): Promise<GetCodeResponse>;\r\n    connectionState(): any;\r\n    hasSigner(): boolean;\r\n}\r\nexport interface Wallet {\r\n    sign(tx: Transaction): Promise<string>;\r\n    address: string;\r\n}\r\n"}}
