{"map":"{\"version\":3,\"file\":\"subscriptions.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/subscriptions.ts\"],\"names\":[],\"mappings\":\"AAEA;IAAA;QACE;;;WAGG;QACK,0BAAqB,GAA0B,IAAI,GAAG,EAAE,CAAC;IAuBnE,CAAC;IArBC,8BAAM,GAAN,UAAO,OAAY;QACjB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;YAC3C,IAAI,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAC3C,KAAG,IAAI,CAAC,MAAM,CAAC,YAAc,CAC9B,CAAC;YACF,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,IAAI,CAAC,CAAC;aAChB;YACD,OAAO,SAAS,CAAC;SAClB;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,2BAAG,GAAH,UAAI,cAAsB,EAAE,QAAkB;QAC5C,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;IAC3D,CAAC;IAED,8BAAM,GAAN,UAAO,EAAU;QACf,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACxC,CAAC;IACH,oBAAC;AAAD,CAAC,AA5BD,IA4BC\"}","code":"var Subscriptions = /** @class */ (function () {\r\n    function Subscriptions() {\r\n        /**\r\n         * Maps subscriptionId to the callback to invoke whenever a message\r\n         * with that id is handled.\r\n         */\r\n        this.subscriptionCallbacks = new Map();\r\n    }\r\n    Subscriptions.prototype.handle = function (message) {\r\n        var data = JSON.parse(message.data);\r\n        if (data.params && data.params.subscription) {\r\n            var callback = this.subscriptionCallbacks.get(\"\" + data.params.subscription);\r\n            if (callback) {\r\n                callback(data);\r\n            }\r\n            return undefined;\r\n        }\r\n        return message;\r\n    };\r\n    Subscriptions.prototype.add = function (subscriptionId, callback) {\r\n        this.subscriptionCallbacks.set(subscriptionId, callback);\r\n    };\r\n    Subscriptions.prototype.remove = function (id) {\r\n        this.subscriptionCallbacks.delete(id);\r\n    };\r\n    return Subscriptions;\r\n}());\r\nexport { Subscriptions };\r\n//# sourceMappingURL=subscriptions.js.map","dts":{"name":"/Users/armaniferrante/Documents/code/src/github.com/oasislabs/tttt/oasis.js/packages/web3/dist/lib/src/subscriptions.d.ts","writeByteOrderMark":false,"text":"import { Middleware } from './websocket';\r\nexport declare class Subscriptions implements Middleware {\r\n    /**\r\n     * Maps subscriptionId to the callback to invoke whenever a message\r\n     * with that id is handled.\r\n     */\r\n    private subscriptionCallbacks;\r\n    handle(message: any): any | undefined;\r\n    add(subscriptionId: string, callback: Function): void;\r\n    remove(id: string): void;\r\n}\r\n"}}
