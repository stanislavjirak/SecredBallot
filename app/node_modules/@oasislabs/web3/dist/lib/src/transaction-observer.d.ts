import { Web3Gateway } from './';
export default class TransactionObserver {
    /**
     * Maps transaction hash to transaction return data.
     */
    private static cache;
    /**
     * Maps ethereum address to the "completedTransaction" subscription.
     */
    private static subscriptions;
    /**
     * Emits an event whenever we receive the return value of
     * a completed transaction.
     */
    private static incoming;
    /**
     * Watches the given gateway for all completed transactions sent by `from`
     * and caches the transaction outcome locally.
     */
    static observe(address: Uint8Array, gw: Web3Gateway): void;
    /**
     * @returns a promise resolving to the return value for the given `txHash`
     *          once the transaction completes.
     */
    static outcome(txHash: string): Promise<any>;
}
