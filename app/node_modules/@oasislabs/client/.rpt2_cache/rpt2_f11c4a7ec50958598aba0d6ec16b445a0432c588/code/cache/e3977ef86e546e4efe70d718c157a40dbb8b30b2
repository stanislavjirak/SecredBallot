{"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/index.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,SAAS,CAAC;AACpC,OAAO,OAAO,MAAM,oBAAoB,CAAC;AACzC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAChD,OAAO,EACL,UAAU,EACV,OAAO,EACP,MAAM,EACN,MAAM,EACN,UAAU,EACV,mBAAmB,EACnB,QAAQ,EACR,YAAY,GACb,MAAM,oBAAoB,CAAC;AAC5B,OAAO,EAAY,OAAO,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AACrE,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAC9C,OAAO,SAAS,MAAM,aAAa,CAAC;AACpC,OAAO,MAAM,MAAM,UAAU,CAAC;AAE9B,IAAM,KAAK,GAAG;IACZ,OAAO,SAAA;IACP,MAAM,QAAA;IACN,MAAM,QAAA;IACN,UAAU,YAAA;IACV,mBAAmB,qBAAA;IACnB,QAAQ,EAAE;QACR,OAAO,SAAA;QACP,WAAW,aAAA;KACZ;IACD,KAAK,EAAE;QACL,KAAK,OAAA;QACL,IAAI,MAAA;QACJ,OAAO,SAAA;QACP,OAAO,SAAA;QACP,UAAU,YAAA;QACV,MAAM,QAAA;QACN,SAAS,WAAA;QACT,GAAG,EAAE;YACH,QAAQ,UAAA;YACR,YAAY,cAAA;SACb;KACF;IACD,SAAS,WAAA;IACT,UAAU;QACR,IAAI;YACF,mBAAmB,EAAE,CAAC,UAAU,EAAE,CAAC;SACpC;QAAC,OAAO,EAAE,EAAE;YACX,+BAA+B;YAC/B,kEAAkE;YAClE,uDAAuD;SACxD;IACH,CAAC;CACF,CAAC;AAEF,eAAe,KAAK,CAAC\"}","code":"import { keccak256 } from 'js-sha3';\r\nimport Gateway from '@oasislabs/gateway';\r\nimport { cbor, bytes } from '@oasislabs/common';\r\nimport { OasisCoder, Service, deploy, header, setGateway, defaultOasisGateway, fromWasm, fromWasmSync, } from '@oasislabs/service';\r\nimport { encrypt, decrypt } from '@oasislabs/confidential';\r\nimport { Web3Gateway } from '@oasislabs/web3';\r\nimport workspace from './workspace';\r\nimport Wallet from './wallet';\r\nvar oasis = {\r\n    Service: Service,\r\n    deploy: deploy,\r\n    Wallet: Wallet,\r\n    setGateway: setGateway,\r\n    defaultOasisGateway: defaultOasisGateway,\r\n    gateways: {\r\n        Gateway: Gateway,\r\n        Web3Gateway: Web3Gateway,\r\n    },\r\n    utils: {\r\n        bytes: bytes,\r\n        cbor: cbor,\r\n        encrypt: encrypt,\r\n        decrypt: decrypt,\r\n        OasisCoder: OasisCoder,\r\n        header: header,\r\n        keccak256: keccak256,\r\n        idl: {\r\n            fromWasm: fromWasm,\r\n            fromWasmSync: fromWasmSync,\r\n        },\r\n    },\r\n    workspace: workspace,\r\n    disconnect: function () {\r\n        try {\r\n            defaultOasisGateway().disconnect();\r\n        }\r\n        catch (_e) {\r\n            // tslint:disable-line no-empty\r\n            // `defaultOasisGateway` will throw if there's no default gateway.\r\n            // Disconnecting from a nonexistent gateway is a no-op.\r\n        }\r\n    },\r\n};\r\nexport default oasis;\r\n//# sourceMappingURL=index.js.map"}
