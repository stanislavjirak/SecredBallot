{"version":3,"file":"index.browser.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","../../../node_modules/eventemitter3/index.js","../../../node_modules/cbor-js/cbor.js","../../common/src/cbor.ts","../../common/src/bytes.ts","../../../node_modules/pako/lib/utils/common.js","../../../node_modules/pako/lib/zlib/trees.js","../../../node_modules/pako/lib/zlib/adler32.js","../../../node_modules/pako/lib/zlib/crc32.js","../../../node_modules/pako/lib/zlib/messages.js","../../../node_modules/pako/lib/zlib/deflate.js","../../../node_modules/pako/lib/utils/strings.js","../../../node_modules/pako/lib/zlib/zstream.js","../../../node_modules/pako/lib/deflate.js","../../../node_modules/pako/lib/zlib/inffast.js","../../../node_modules/pako/lib/zlib/inftrees.js","../../../node_modules/pako/lib/zlib/inflate.js","../../../node_modules/pako/lib/zlib/constants.js","../../../node_modules/pako/lib/zlib/gzheader.js","../../../node_modules/pako/lib/inflate.js","../../../node_modules/pako/index.js","../../service/src/idl.ts","../../../node_modules/uint32/uint32.js","../../../node_modules/bsaes/aes.js","../../../node_modules/bsaes/unsafe.js","../../../node_modules/rollup-plugin-node-resolve/src/empty.js","../../confidential/node_modules/tweetnacl/nacl-fast.js","../../confidential/src/tweetnacl.ts","../../confidential/src/error.ts","../../service/src/error.ts","../../service/node_modules/quick-lru/index.js","../../service/node_modules/camelcase-keys/index.js","../../../node_modules/js-sha3/src/sha3.js","../../service/src/deploy/header.ts","../../service/src/oasis-gateway.ts","../src/api.ts","../src/polling.ts","../../../node_modules/axios/lib/helpers/bind.js","../../../node_modules/axios/node_modules/is-buffer/index.js","../../../node_modules/axios/lib/utils.js","../../../node_modules/axios/lib/helpers/normalizeHeaderName.js","../../../node_modules/axios/lib/core/enhanceError.js","../../../node_modules/axios/lib/core/createError.js","../../../node_modules/axios/lib/core/settle.js","../../../node_modules/axios/lib/helpers/buildURL.js","../../../node_modules/axios/lib/helpers/parseHeaders.js","../../../node_modules/axios/lib/helpers/isURLSameOrigin.js","../../../node_modules/axios/lib/helpers/cookies.js","../../../node_modules/axios/lib/adapters/xhr.js","../../../node_modules/axios/lib/defaults.js","../../../node_modules/axios/lib/core/InterceptorManager.js","../../../node_modules/axios/lib/core/transformData.js","../../../node_modules/axios/lib/cancel/isCancel.js","../../../node_modules/axios/lib/helpers/isAbsoluteURL.js","../../../node_modules/axios/lib/helpers/combineURLs.js","../../../node_modules/axios/lib/core/dispatchRequest.js","../../../node_modules/axios/lib/core/Axios.js","../../../node_modules/axios/lib/cancel/Cancel.js","../../../node_modules/axios/lib/cancel/CancelToken.js","../../../node_modules/axios/lib/helpers/spread.js","../../../node_modules/axios/lib/axios.js","../../../node_modules/axios/index.js","../src/http.ts","../../../node_modules/uuid/lib/rng-browser.js","../../../node_modules/uuid/lib/bytesToUuid.js","../../../node_modules/uuid/v1.js","../../../node_modules/uuid/v4.js","../../../node_modules/uuid/index.js","../src/session.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2014 Patrick Gansterer <paroga@paroga.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n(function(global, undefined) { \"use strict\";\r\nvar POW_2_24 = Math.pow(2, -24),\r\n    POW_2_32 = Math.pow(2, 32),\r\n    POW_2_53 = Math.pow(2, 53);\r\n\r\nfunction encode(value) {\r\n  var data = new ArrayBuffer(256);\r\n  var dataView = new DataView(data);\r\n  var lastLength;\r\n  var offset = 0;\r\n\r\n  function ensureSpace(length) {\r\n    var newByteLength = data.byteLength;\r\n    var requiredLength = offset + length;\r\n    while (newByteLength < requiredLength)\r\n      newByteLength *= 2;\r\n    if (newByteLength !== data.byteLength) {\r\n      var oldDataView = dataView;\r\n      data = new ArrayBuffer(newByteLength);\r\n      dataView = new DataView(data);\r\n      var uint32count = (offset + 3) >> 2;\r\n      for (var i = 0; i < uint32count; ++i)\r\n        dataView.setUint32(i * 4, oldDataView.getUint32(i * 4));\r\n    }\r\n\r\n    lastLength = length;\r\n    return dataView;\r\n  }\r\n  function write() {\r\n    offset += lastLength;\r\n  }\r\n  function writeFloat64(value) {\r\n    write(ensureSpace(8).setFloat64(offset, value));\r\n  }\r\n  function writeUint8(value) {\r\n    write(ensureSpace(1).setUint8(offset, value));\r\n  }\r\n  function writeUint8Array(value) {\r\n    var dataView = ensureSpace(value.length);\r\n    for (var i = 0; i < value.length; ++i)\r\n      dataView.setUint8(offset + i, value[i]);\r\n    write();\r\n  }\r\n  function writeUint16(value) {\r\n    write(ensureSpace(2).setUint16(offset, value));\r\n  }\r\n  function writeUint32(value) {\r\n    write(ensureSpace(4).setUint32(offset, value));\r\n  }\r\n  function writeUint64(value) {\r\n    var low = value % POW_2_32;\r\n    var high = (value - low) / POW_2_32;\r\n    var dataView = ensureSpace(8);\r\n    dataView.setUint32(offset, high);\r\n    dataView.setUint32(offset + 4, low);\r\n    write();\r\n  }\r\n  function writeTypeAndLength(type, length) {\r\n    if (length < 24) {\r\n      writeUint8(type << 5 | length);\r\n    } else if (length < 0x100) {\r\n      writeUint8(type << 5 | 24);\r\n      writeUint8(length);\r\n    } else if (length < 0x10000) {\r\n      writeUint8(type << 5 | 25);\r\n      writeUint16(length);\r\n    } else if (length < 0x100000000) {\r\n      writeUint8(type << 5 | 26);\r\n      writeUint32(length);\r\n    } else {\r\n      writeUint8(type << 5 | 27);\r\n      writeUint64(length);\r\n    }\r\n  }\r\n  \r\n  function encodeItem(value) {\r\n    var i;\r\n\r\n    if (value === false)\r\n      return writeUint8(0xf4);\r\n    if (value === true)\r\n      return writeUint8(0xf5);\r\n    if (value === null)\r\n      return writeUint8(0xf6);\r\n    if (value === undefined)\r\n      return writeUint8(0xf7);\r\n  \r\n    switch (typeof value) {\r\n      case \"number\":\r\n        if (Math.floor(value) === value) {\r\n          if (0 <= value && value <= POW_2_53)\r\n            return writeTypeAndLength(0, value);\r\n          if (-POW_2_53 <= value && value < 0)\r\n            return writeTypeAndLength(1, -(value + 1));\r\n        }\r\n        writeUint8(0xfb);\r\n        return writeFloat64(value);\r\n\r\n      case \"string\":\r\n        var utf8data = [];\r\n        for (i = 0; i < value.length; ++i) {\r\n          var charCode = value.charCodeAt(i);\r\n          if (charCode < 0x80) {\r\n            utf8data.push(charCode);\r\n          } else if (charCode < 0x800) {\r\n            utf8data.push(0xc0 | charCode >> 6);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          } else if (charCode < 0xd800) {\r\n            utf8data.push(0xe0 | charCode >> 12);\r\n            utf8data.push(0x80 | (charCode >> 6)  & 0x3f);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          } else {\r\n            charCode = (charCode & 0x3ff) << 10;\r\n            charCode |= value.charCodeAt(++i) & 0x3ff;\r\n            charCode += 0x10000;\r\n\r\n            utf8data.push(0xf0 | charCode >> 18);\r\n            utf8data.push(0x80 | (charCode >> 12)  & 0x3f);\r\n            utf8data.push(0x80 | (charCode >> 6)  & 0x3f);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          }\r\n        }\r\n\r\n        writeTypeAndLength(3, utf8data.length);\r\n        return writeUint8Array(utf8data);\r\n\r\n      default:\r\n        var length;\r\n        if (Array.isArray(value)) {\r\n          length = value.length;\r\n          writeTypeAndLength(4, length);\r\n          for (i = 0; i < length; ++i)\r\n            encodeItem(value[i]);\r\n        } else if (value instanceof Uint8Array) {\r\n          writeTypeAndLength(2, value.length);\r\n          writeUint8Array(value);\r\n        } else {\r\n          var keys = Object.keys(value);\r\n          length = keys.length;\r\n          writeTypeAndLength(5, length);\r\n          for (i = 0; i < length; ++i) {\r\n            var key = keys[i];\r\n            encodeItem(key);\r\n            encodeItem(value[key]);\r\n          }\r\n        }\r\n    }\r\n  }\r\n  \r\n  encodeItem(value);\r\n\r\n  if (\"slice\" in data)\r\n    return data.slice(0, offset);\r\n  \r\n  var ret = new ArrayBuffer(offset);\r\n  var retView = new DataView(ret);\r\n  for (var i = 0; i < offset; ++i)\r\n    retView.setUint8(i, dataView.getUint8(i));\r\n  return ret;\r\n}\r\n\r\nfunction decode(data, tagger, simpleValue) {\r\n  var dataView = new DataView(data);\r\n  var offset = 0;\r\n  \r\n  if (typeof tagger !== \"function\")\r\n    tagger = function(value) { return value; };\r\n  if (typeof simpleValue !== \"function\")\r\n    simpleValue = function() { return undefined; };\r\n\r\n  function read(value, length) {\r\n    offset += length;\r\n    return value;\r\n  }\r\n  function readArrayBuffer(length) {\r\n    return read(new Uint8Array(data, offset, length), length);\r\n  }\r\n  function readFloat16() {\r\n    var tempArrayBuffer = new ArrayBuffer(4);\r\n    var tempDataView = new DataView(tempArrayBuffer);\r\n    var value = readUint16();\r\n\r\n    var sign = value & 0x8000;\r\n    var exponent = value & 0x7c00;\r\n    var fraction = value & 0x03ff;\r\n    \r\n    if (exponent === 0x7c00)\r\n      exponent = 0xff << 10;\r\n    else if (exponent !== 0)\r\n      exponent += (127 - 15) << 10;\r\n    else if (fraction !== 0)\r\n      return fraction * POW_2_24;\r\n    \r\n    tempDataView.setUint32(0, sign << 16 | exponent << 13 | fraction << 13);\r\n    return tempDataView.getFloat32(0);\r\n  }\r\n  function readFloat32() {\r\n    return read(dataView.getFloat32(offset), 4);\r\n  }\r\n  function readFloat64() {\r\n    return read(dataView.getFloat64(offset), 8);\r\n  }\r\n  function readUint8() {\r\n    return read(dataView.getUint8(offset), 1);\r\n  }\r\n  function readUint16() {\r\n    return read(dataView.getUint16(offset), 2);\r\n  }\r\n  function readUint32() {\r\n    return read(dataView.getUint32(offset), 4);\r\n  }\r\n  function readUint64() {\r\n    return readUint32() * POW_2_32 + readUint32();\r\n  }\r\n  function readBreak() {\r\n    if (dataView.getUint8(offset) !== 0xff)\r\n      return false;\r\n    offset += 1;\r\n    return true;\r\n  }\r\n  function readLength(additionalInformation) {\r\n    if (additionalInformation < 24)\r\n      return additionalInformation;\r\n    if (additionalInformation === 24)\r\n      return readUint8();\r\n    if (additionalInformation === 25)\r\n      return readUint16();\r\n    if (additionalInformation === 26)\r\n      return readUint32();\r\n    if (additionalInformation === 27)\r\n      return readUint64();\r\n    if (additionalInformation === 31)\r\n      return -1;\r\n    throw \"Invalid length encoding\";\r\n  }\r\n  function readIndefiniteStringLength(majorType) {\r\n    var initialByte = readUint8();\r\n    if (initialByte === 0xff)\r\n      return -1;\r\n    var length = readLength(initialByte & 0x1f);\r\n    if (length < 0 || (initialByte >> 5) !== majorType)\r\n      throw \"Invalid indefinite length element\";\r\n    return length;\r\n  }\r\n\r\n  function appendUtf16data(utf16data, length) {\r\n    for (var i = 0; i < length; ++i) {\r\n      var value = readUint8();\r\n      if (value & 0x80) {\r\n        if (value < 0xe0) {\r\n          value = (value & 0x1f) <<  6\r\n                | (readUint8() & 0x3f);\r\n          length -= 1;\r\n        } else if (value < 0xf0) {\r\n          value = (value & 0x0f) << 12\r\n                | (readUint8() & 0x3f) << 6\r\n                | (readUint8() & 0x3f);\r\n          length -= 2;\r\n        } else {\r\n          value = (value & 0x0f) << 18\r\n                | (readUint8() & 0x3f) << 12\r\n                | (readUint8() & 0x3f) << 6\r\n                | (readUint8() & 0x3f);\r\n          length -= 3;\r\n        }\r\n      }\r\n\r\n      if (value < 0x10000) {\r\n        utf16data.push(value);\r\n      } else {\r\n        value -= 0x10000;\r\n        utf16data.push(0xd800 | (value >> 10));\r\n        utf16data.push(0xdc00 | (value & 0x3ff));\r\n      }\r\n    }\r\n  }\r\n\r\n  function decodeItem() {\r\n    var initialByte = readUint8();\r\n    var majorType = initialByte >> 5;\r\n    var additionalInformation = initialByte & 0x1f;\r\n    var i;\r\n    var length;\r\n\r\n    if (majorType === 7) {\r\n      switch (additionalInformation) {\r\n        case 25:\r\n          return readFloat16();\r\n        case 26:\r\n          return readFloat32();\r\n        case 27:\r\n          return readFloat64();\r\n      }\r\n    }\r\n\r\n    length = readLength(additionalInformation);\r\n    if (length < 0 && (majorType < 2 || 6 < majorType))\r\n      throw \"Invalid length\";\r\n\r\n    switch (majorType) {\r\n      case 0:\r\n        return length;\r\n      case 1:\r\n        return -1 - length;\r\n      case 2:\r\n        if (length < 0) {\r\n          var elements = [];\r\n          var fullArrayLength = 0;\r\n          while ((length = readIndefiniteStringLength(majorType)) >= 0) {\r\n            fullArrayLength += length;\r\n            elements.push(readArrayBuffer(length));\r\n          }\r\n          var fullArray = new Uint8Array(fullArrayLength);\r\n          var fullArrayOffset = 0;\r\n          for (i = 0; i < elements.length; ++i) {\r\n            fullArray.set(elements[i], fullArrayOffset);\r\n            fullArrayOffset += elements[i].length;\r\n          }\r\n          return fullArray;\r\n        }\r\n        return readArrayBuffer(length);\r\n      case 3:\r\n        var utf16data = [];\r\n        if (length < 0) {\r\n          while ((length = readIndefiniteStringLength(majorType)) >= 0)\r\n            appendUtf16data(utf16data, length);\r\n        } else\r\n          appendUtf16data(utf16data, length);\r\n        return String.fromCharCode.apply(null, utf16data);\r\n      case 4:\r\n        var retArray;\r\n        if (length < 0) {\r\n          retArray = [];\r\n          while (!readBreak())\r\n            retArray.push(decodeItem());\r\n        } else {\r\n          retArray = new Array(length);\r\n          for (i = 0; i < length; ++i)\r\n            retArray[i] = decodeItem();\r\n        }\r\n        return retArray;\r\n      case 5:\r\n        var retObject = {};\r\n        for (i = 0; i < length || length < 0 && !readBreak(); ++i) {\r\n          var key = decodeItem();\r\n          retObject[key] = decodeItem();\r\n        }\r\n        return retObject;\r\n      case 6:\r\n        return tagger(decodeItem(), length);\r\n      case 7:\r\n        switch (length) {\r\n          case 20:\r\n            return false;\r\n          case 21:\r\n            return true;\r\n          case 22:\r\n            return null;\r\n          case 23:\r\n            return undefined;\r\n          default:\r\n            return simpleValue(length);\r\n        }\r\n    }\r\n  }\r\n\r\n  var ret = decodeItem();\r\n  if (offset !== data.byteLength)\r\n    throw \"Remaining bytes\";\r\n  return ret;\r\n}\r\n\r\nvar obj = { encode: encode, decode: decode };\r\n\r\nif (typeof define === \"function\" && define.amd)\r\n  define(\"cbor/cbor\", obj);\r\nelse if (typeof module !== 'undefined' && module.exports)\r\n  module.exports = obj;\r\nelse if (!global.CBOR)\r\n  global.CBOR = obj;\r\n\r\n})(this);\r\n","/**\n * Cbor utility module to\n * 1) provide a clean import (import * as cbor from './cbor';) and\n * 2) provide a consistent Uint8Array interface, since cbor-js uses ArrayBuffers.\n */\n\nimport * as _cborJs from 'cbor-js';\n\nlet cborJs: any = undefined;\n\n// Browser.\n/* tslint:disable */\nif (typeof window !== 'undefined') {\n  cborJs = _cborJs.default;\n}\n// Node;\nelse {\n  cborJs = require('cbor-js');\n}\n\nexport function encode(input: any): Uint8Array {\n  return new Uint8Array(cborJs.encode(input));\n}\n\nexport function decode(input: Uint8Array): any {\n  try {\n    return cborJs.decode(input.buffer);\n  } catch (e) {\n    throw new CborDecodeError(\n      input,\n      `Failed to cbor decode ${input} with error: ${e.message}`\n    );\n  }\n}\n\nconst cbor = {\n  encode,\n  decode,\n};\n\nexport class CborDecodeError extends Error {\n  constructor(private data: Uint8Array, ...params: any[]) {\n    super(...params);\n  }\n}\n\nexport default cbor;\n","/**\n * Return a Uint8Array of an ethereum hex-encoded key (EthHex)\n * @param   keystring is the EthHex encoding of the value\n * @param   littleEndian is true if the keystring should be interpreted as\n *          little endian. Otherwise, defaults to big endian.\n * @returns the byte incoding of the value\n */\nexport function parseHex(keystring: string, littleEndian = false): Uint8Array {\n  if (keystring.indexOf('0x') === 0) {\n    keystring = keystring.substr(2);\n  }\n  if (keystring.length % 2 === 1) {\n    keystring = '0' + keystring;\n  }\n\n  let key = keystring.match(/.{2}/g);\n\n  if (key === null) {\n    return new Uint8Array();\n  }\n\n  if (littleEndian) {\n    key = key.reverse();\n  }\n\n  return new Uint8Array(key.map(byte => parseInt(byte, 16)));\n}\n\n/**\n * Returns an ethereum hex-encoded key of a Uint8Array\n * @param {Uint8Array} keybytes\n * @returns {String} The EthHex encoding\n */\nexport function toHex(keybytes: Uint8Array): string {\n  return keybytes.reduce(\n    (str, byte) => str + byte.toString(16).padStart(2, '0'),\n    '0x'\n  );\n}\n\n/**\n * @returns a Uint8Array representation of number with numBytes.\n * @param   num is the number of which we want a byte representation.\n * @param   numBytes is the number of bytes to have in the resultant array.\n * @param   littleEndian is true iff the resultant byte array is little Endian.\n * @throws  if the resultant array will be longer than numBytes or the given\n *          `num` is less than 0.\n */\nexport function parseNumber(\n  num: number,\n  numBytes: number,\n  littleEndian = false\n): Uint8Array {\n  if (num < 0) {\n    throw new Error(`${num} must be greater than or equal to 0`);\n  }\n  let numberHexStr = num.toString(16);\n  if (numberHexStr.length > numBytes) {\n    throw new Error(\n      `cannot parse ${num} into a byte array of length ${numBytes}`\n    );\n  }\n\n  numberHexStr = '0'.repeat(numBytes * 2 - numberHexStr.length) + numberHexStr;\n  return parseHex(numberHexStr, littleEndian);\n}\n\n/**\n * @returns a newly allocated Uint8Array of all arrays concatenated together.\n */\nexport function concat(arrays: Array<Uint8Array>): Uint8Array {\n  let size = 0;\n  arrays.forEach(a => (size += a.length));\n\n  let concatenated = new Uint8Array(size);\n\n  let start = 0;\n  arrays.forEach(a => {\n    concatenated.set(a, start);\n    start += a.length;\n  });\n\n  return concatenated;\n}\n\n/**\n * decodeUtf8 is a string decoding utility for both node and browsers.\n */\nexport function decodeUtf8(array: Uint8Array): string {\n  let decoder =\n    // tslint:disable-next-line\n    typeof TextDecoder === 'undefined'\n      ? // @ts-ignore\n        new (require('util')).TextDecoder('utf-8') // Node.\n      : new TextDecoder('utf-8'); // Browser.\n  // @ts-ignore\n  return decoder.decode(array);\n}\n\n/**\n * encodeUtf8 is a string encoding utility for both node and browsers.\n */\nexport function encodeUtf8(input: string): Uint8Array {\n  let encoder =\n    // tslint:disable-next-line\n    typeof TextEncoder === 'undefined'\n      ? // @ts-ignore\n        new (require('util')).TextEncoder('utf-8') // Node.\n      : new TextEncoder(); // Browser.\n  // @ts-ignore\n  return encoder.encode(input);\n}\n\n/**\n * Converts the given byte array to a number. Cannot parse a number\n * larger than u64, specifically, 2**53-1 (javascripts max number).\n */\nexport function toNumber(bytes: Uint8Array, le = false): number {\n  if (bytes.length > 8) {\n    throw new Error('Cannot parse a number greater than u64');\n  }\n  let b = toHex(bytes).substr(2);\n  if (le) {\n    let match = b.match(/../g);\n    if (match !== null) {\n      b = match.reverse().join('');\n    }\n  }\n  let result = parseInt(b, 16);\n  if (result >= Number.MAX_SAFE_INTEGER) {\n    throw new Error(`Overflowed when converting to number: ${bytes}`);\n  }\n  return result;\n}\n\n/**\n * @returns the given bytes as a Uint8Array.\n * @throws  if the given bytes is not of the given `length`.\n */\nexport function assertLength(\n  bytes: string | Uint8Array,\n  length: number\n): Uint8Array {\n  if (typeof bytes === 'string') {\n    bytes = parseHex(bytes);\n  }\n  if (bytes.length !== length) {\n    throw new InvalidBytesError(\n      bytes,\n      `invalid bytes length: received ${bytes.length} but expected ${length}`\n    );\n  }\n  return bytes;\n}\n\nexport class InvalidBytesError extends Error {\n  constructor(readonly bytes: Uint8Array, ...params: any[]) {\n    super(...params);\n  }\n}\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = require('./lib/utils/common').assign;\n\nvar deflate   = require('./lib/deflate');\nvar inflate   = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n","import { bytes } from '@oasislabs/common';\nimport { inflateRaw } from 'pako';\n\n// Idl type definitions.\n//\n// TODO. https://github.com/oasislabs/oasis-client/issues/13\n\n// Idl {\n//   name: RpcIdent,\n//   namespace: RpcIdent,\n//   constructor: RpcConstructor,\n//   functions: Array<RpcFn>,\n//   idl_gen_version: string,\n//   imports?: Array<RpcImport>,\n//   type_defs?: Array<RpcTypeDef>,\n// }\nexport interface Idl {\n  [key: string]: any;\n  constructor: RpcConstructor;\n}\n\nexport class IdlError extends Error {}\n\nexport async function fromWasm(bytecode: Uint8Array): Promise<Idl> {\n  return extractIdl(await WebAssembly.compile(bytecode));\n}\n\nexport function fromWasmSync(bytecode: Uint8Array): Idl {\n  return extractIdl(new WebAssembly.Module(bytecode));\n}\n\nfunction extractIdl(wasmModule: WebAssembly.Module): Idl {\n  // @ts-ignore\n  let sections = WebAssembly.Module.customSections(\n    wasmModule,\n    'oasis-interface'\n  );\n\n  if (sections.length !== 1) {\n    throw new IdlError('wasm bytecode must have one oasis-interface section');\n  }\n\n  let deflatedIdl = new Uint8Array(sections[0]);\n  let inflatedIdl = new Uint8Array(inflateRaw(deflatedIdl));\n\n  return JSON.parse(bytes.decodeUtf8(inflatedIdl));\n}\n\ntype RpcIdent = string;\n\ntype RpcImport = {};\n\ntype RpcTypeDef = {};\n\ntype RpcField = {};\n\nenum RpcType {}\n\ntype RpcConstructor = any;\n\nexport type RpcFn = {\n  name: string;\n  inputs: Array<RpcInput>;\n};\n\nexport type RpcInput = any;\n","/* jshint bitwise: false */\r\n\r\n/**\r\n * @license (c) Franz X Antesberger 2013\r\n */\r\n(function (exporter) {\r\n    'use strict';\r\n\r\n    var POW_2_32 = 0x0100000000;\r\n    var POW_2_52 = 0x10000000000000;\r\n\r\n    //\r\n    //  Creating and Extracting\r\n    //\r\n\r\n    /**\r\n     *  Creates an uint32 from the given bytes in big endian order.\r\n     *  @param {Number} highByte the high byte\r\n     *  @param {Number} secondHighByte the 2nd high byte\r\n     *  @param {Number} thirdHighByte the 3rd high byte\r\n     *  @param {Number} lowByte the low byte\r\n     *  @returns highByte concat secondHighByte concat thirdHighByte concat lowByte\r\n     */\r\n    exporter.fromBytesBigEndian = function (highByte, secondHighByte, thirdHighByte, lowByte) {\r\n        return ((highByte << 24) | (secondHighByte << 16) | (thirdHighByte << 8) | lowByte) >>> 0;\r\n    };\r\n\r\n    /**\r\n     *  Returns the byte.\r\n     *  e.g. when byteNo is 0, the high byte is returned, when byteNo = 3 the low byte is returned.\r\n     *  @param {Number} uint32value the source to be extracted\r\n     *  @param {Number} byteNo 0-3 the byte number, 0 is the high byte, 3 the low byte\r\n     *  @returns {Number} the 0-255 byte according byteNo\r\n     */\r\n    exporter.getByteBigEndian = function (uint32value, byteNo) {\r\n        return (uint32value >>> (8 * (3 - byteNo))) & 0xff;\r\n    };\r\n\r\n    /**\r\n     *  Returns the bytes as array.\r\n     *  @param {Number} uint32value the source to be extracted\r\n     *  @returns {Array} the array [highByte, 2ndHighByte, 3rdHighByte, lowByte]\r\n     */\r\n    exporter.getBytesBigEndian = function (uint32value) {\r\n        return [\r\n            exporter.getByteBigEndian(uint32value, 0),\r\n            exporter.getByteBigEndian(uint32value, 1),\r\n            exporter.getByteBigEndian(uint32value, 2),\r\n            exporter.getByteBigEndian(uint32value, 3)\r\n        ];\r\n    };\r\n\r\n    /**\r\n     *  Converts a given uin32 to a hex string including leading zeros.\r\n     *  @param {Number} uint32value the uint32 to be stringified\r\n     *  @param {Number} optionalMinLength the optional (default 8)\r\n     */\r\n    exporter.toHex = function (uint32value, optionalMinLength) {\r\n        optionalMinLength = optionalMinLength || 8;\r\n        var result = uint32value.toString(16);\r\n        if (result.length < optionalMinLength) {\r\n            result = new Array(optionalMinLength - result.length + 1).join('0') + result;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     *  Converts a number to an uint32.\r\n     *  @param {Number} number the number to be converted.\r\n     *  @return {Number} an uint32 value\r\n     */\r\n    exporter.toUint32 = function (number) {\r\n        // the shift operator forces js to perform the internal ToUint32 (see ecmascript spec 9.6)\r\n        return number >>> 0;\r\n    };\r\n\r\n    /**\r\n     *  Returns the part above the uint32 border.\r\n     *  Depending to the javascript engine, that are the 54-32 = 22 high bits\r\n     *  @param {Number} number the number to extract the high part\r\n     *  @return {Number} the high part of the number\r\n     */\r\n    exporter.highPart = function (number) {\r\n        return exporter.toUint32(number / POW_2_32);\r\n    };\r\n\r\n    //\r\n    //  Bitwise Logical Operators\r\n    //\r\n\r\n    /**\r\n     *  Returns a bitwise OR operation on two or more values.\r\n     *  @param {Number} uint32val0 first uint32 value\r\n     *  @param {Number} argv one or more uint32 values\r\n     *  @return {Number} the bitwise OR uint32 value\r\n     */\r\n    exporter.or = function (uint32val0, argv) {\r\n        var result = uint32val0;\r\n        for (var index = 1; index < arguments.length; index += 1) {\r\n            result = (result | arguments[index]);\r\n        }\r\n        return result >>> 0;\r\n    };\r\n\r\n    /**\r\n     *  Returns a bitwise AND operation on two or more values.\r\n     *  @param {Number} uint32val0 first uint32 value\r\n     *  @param {Number} argv one or more uint32 values\r\n     *  @return {Number} the bitwise AND uint32 value\r\n     */\r\n    exporter.and = function (uint32val0, argv) {\r\n        var result = uint32val0;\r\n        for (var index = 1; index < arguments.length; index += 1) {\r\n            result = (result & arguments[index]);\r\n        }\r\n        return result >>> 0;\r\n    };\r\n\r\n    /**\r\n     *  Returns a bitwise XOR operation on two or more values.\r\n     *  @param {Number} uint32val0 first uint32 value\r\n     *  @param {Number} argv one or more uint32 values\r\n     *  @return {Number} the bitwise XOR uint32 value\r\n     */\r\n    exporter.xor = function (uint32val0, argv) {\r\n        var result = uint32val0;\r\n        for (var index = 1; index < arguments.length; index += 1) {\r\n            result = (result ^ arguments[index]);\r\n        }\r\n        return result >>> 0;\r\n    };\r\n\r\n    exporter.not = function (uint32val) {\r\n        return (~uint32val) >>> 0;\r\n    };\r\n\r\n    //\r\n    // Shifting and Rotating\r\n    //\r\n\r\n    /**\r\n     *  Returns the uint32 representation of a << operation.\r\n     *  @param {Number} uint32val the word to be shifted\r\n     *  @param {Number} numBits the number of bits to be shifted (0-31)\r\n     *  @returns {Number} the uint32 value of the shifted word\r\n     */\r\n    exporter.shiftLeft = function (uint32val, numBits) {\r\n        return (uint32val << numBits) >>> 0;\r\n    };\r\n\r\n    /**\r\n     *  Returns the uint32 representation of a >>> operation.\r\n     *  @param {Number} uint32val the word to be shifted\r\n     *  @param {Number} numBits the number of bits to be shifted (0-31)\r\n     *  @returns {Number} the uint32 value of the shifted word\r\n     */\r\n    exporter.shiftRight = function (uint32val, numBits) {\r\n        return uint32val >>> numBits;\r\n    };\r\n\r\n    exporter.rotateLeft = function (uint32val, numBits) {\r\n        return (((uint32val << numBits) >>> 0) | (uint32val >>> (32 - numBits))) >>> 0;\r\n    };\r\n\r\n    exporter.rotateRight = function (uint32val, numBits) {\r\n        return (((uint32val) >>> (numBits)) | ((uint32val) << (32 - numBits)) >>> 0) >>> 0;\r\n    };\r\n\r\n    //\r\n    // Logical Gates\r\n    //\r\n\r\n    /**\r\n     *  Bitwise choose bits from y or z, as a bitwise x ? y : z\r\n     */\r\n    exporter.choose = function (x, y, z) {\r\n        return ((x & (y ^ z)) ^ z) >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Majority gate for three parameters. Takes bitwise the majority of x, y and z,\r\n     * @see https://en.wikipedia.org/wiki/Majority_function\r\n     */\r\n    exporter.majority = function (x, y, z) {\r\n        return ((x & (y | z)) | (y & z)) >>> 0;\r\n    };\r\n\r\n    //\r\n    //  Arithmetic\r\n    //\r\n\r\n    /**\r\n     *  Adds the given values modulus 2^32.\r\n     *  @returns the sum of the given values modulus 2^32\r\n     */\r\n    exporter.addMod32 = function (uint32val0/*, optionalValues*/) {\r\n        var result = uint32val0;\r\n        for (var index = 1; index < arguments.length; index += 1) {\r\n            result += arguments[index];\r\n        }\r\n        return result >>> 0;\r\n    };\r\n\r\n    /**\r\n     *  Returns the log base 2 of the given value. That is the number of the highest set bit.\r\n     *  @param {Number} uint32val the value, the log2 is calculated of\r\n     *  @return {Number} the logarithm base 2, an integer between 0 and 31\r\n     */\r\n    exporter.log2 = function (uint32val) {\r\n        return Math.floor(Math.log(uint32val) / Math.LN2);\r\n    };\r\n\r\n/*\r\n    // this implementation does the same, looks much funnier, but takes 2 times longer (according to jsperf) ...\r\n    var log2_u = new Uint32Array(2);\r\n    var log2_d = new Float64Array(log2_u.buffer);\r\n\r\n    exporter.log2 = function (uint32val) {\r\n        // Ported from http://graphics.stanford.edu/~seander/bithacks.html#IntegerLogIEEE64Float to javascript\r\n        // (public domain)\r\n        if (uint32val === 0) {\r\n            return -Infinity;\r\n        }\r\n        // fill in the low part\r\n        log2_u[0] = uint32val;\r\n        // set the mantissa to 2^52\r\n        log2_u[1] = 0x43300000;\r\n        // subtract 2^52\r\n        log2_d[0] -= 0x10000000000000;\r\n        return (log2_u[1] >>> 20) - 0x3FF;\r\n    };\r\n*/\r\n\r\n    /**\r\n     *  Returns the the low and the high uint32 of the multiplication.\r\n     *  @param {Number} factor1 an uint32\r\n     *  @param {Number} factor2 an uint32\r\n     *  @param {Uint32Array[2]} resultUint32Array2 the Array, where the result will be written to\r\n     *  @returns undefined\r\n     */\r\n    exporter.mult = function (factor1, factor2, resultUint32Array2) {\r\n        var high16 =  ((factor1 & 0xffff0000) >>> 0) * factor2;\r\n        var low16 = (factor1 & 0x0000ffff) * factor2;\r\n        // the addition is dangerous, because the result will be rounded, so the result depends on the lowest bits, which will be cut away!\r\n        var carry = ((exporter.toUint32(high16) + exporter.toUint32(low16)) >= POW_2_32) ? 1 : 0;\r\n        resultUint32Array2[0] = (exporter.highPart(high16) + exporter.highPart(low16) + carry) >>> 0;\r\n        resultUint32Array2[1] = ((high16 >>> 0) + (low16 >>> 0));// >>> 0;\r\n    };\r\n\r\n}) ((typeof module !== 'undefined') ? module.exports = {} : window.uint32 = {});\r\n","// Copyright (c) 2016 Thomas Pornin <pornin@bolet.org>\n// Copyright (c) 2017 Yawning Angel <yawning at schwanenlied dot me>\n// Copyright (c) 2019 Oasis Labs Inc. <info@oasislabs.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n// BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nvar uint32 = require('uint32');\n\nconst rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1B, 0x36];\nconst oddsMask = uint32.fromBytesBigEndian(0x55, 0x55, 0x55, 0x55);\nconst evensMask = uint32.fromBytesBigEndian(0xaa, 0xaa, 0xaa, 0xaa);\nconst cl4 = uint32.fromBytesBigEndian(0x33, 0x33, 0x33, 0x33);\nconst ch4 = uint32.fromBytesBigEndian(0xcc, 0xcc, 0xcc, 0xcc);\nconst cl8 = uint32.fromBytesBigEndian(0x0f, 0x0f, 0x0f, 0x0f);\nconst ch8 = uint32.fromBytesBigEndian(0xf0, 0xf0, 0xf0, 0xf0);\n\nconst shiftRowsMask0 = uint32.fromBytesBigEndian(0x00, 0x00, 0x00, 0xff);\nconst shiftRowsMask1 = uint32.fromBytesBigEndian(0x00, 0x00, 0xfc, 0x00);\nconst shiftRowsMask2 = uint32.fromBytesBigEndian(0x00, 0x00, 0x03, 0x00);\nconst shiftRowsMask3 = uint32.fromBytesBigEndian(0x00, 0xf0, 0x00, 0x00);\nconst shiftRowsMask4 = uint32.fromBytesBigEndian(0x00, 0x0f, 0x00, 0x00);\nconst shiftRowsMask5 = uint32.fromBytesBigEndian(0xc0, 0x00, 0x00, 0x00);\nconst shiftRowsMask6 = uint32.fromBytesBigEndian(0x3f, 0x00, 0x00, 0x00);\n\nfunction newQ() {\n\treturn new Uint32Array(8); // q\n}\n\n// AddRoundKey\nfunction addRoundKey(q, sk) {\n\tq[0] = uint32.xor(q[0], sk[0])\n\tq[1] = uint32.xor(q[1], sk[1])\n\tq[2] = uint32.xor(q[2], sk[2])\n\tq[3] = uint32.xor(q[3], sk[3])\n\tq[4] = uint32.xor(q[4], sk[4])\n\tq[5] = uint32.xor(q[5], sk[5])\n\tq[6] = uint32.xor(q[6], sk[6])\n\tq[7] = uint32.xor(q[7], sk[7])\n}\n\n// SubBytes\nfunction subBytes(q) {\n\t// This S-box implementation is a straightforward translation of\n\t// the circuit described by Boyar and Peralta in \"A new\n\t// combinational logic minimization technique with applications\n\t// to cryptology\" (https://eprint.iacr.org/2009/191.pdf).\n\t//\n\t// Note that variables x* (input) and s* (output) are numbered\n\t// in \"reverse\" order (x0 is the high bit, x7 is the low bit).\n\n\tconst x0 = q[7];\n\tconst x1 = q[6];\n\tconst x2 = q[5];\n\tconst x3 = q[4];\n\tconst x4 = q[3];\n\tconst x5 = q[2];\n\tconst x6 = q[1];\n\tconst x7 = q[0];\n\n\t//\n\t// Top linear transformation.\n\t//\n\tconst y14 = uint32.xor(x3, x5);\n\tconst y13 = uint32.xor(x0, x6);\n\tconst y9 = uint32.xor(x0, x3);\n\tconst y8 = uint32.xor(x0, x5);\n\tconst t0 = uint32.xor(x1, x2);\n\tconst y1 = uint32.xor(t0, x7);\n\tconst y4 = uint32.xor(y1, x3);\n\tconst y12 = uint32.xor(y13, y14);\n\tconst y2 = uint32.xor(y1, x0);\n\tconst y5 = uint32.xor(y1, x6);\n\tconst y3 = uint32.xor(y5, y8);\n\tconst t1 = uint32.xor(x4, y12);\n\tconst y15 = uint32.xor(t1, x5);\n\tconst y20 = uint32.xor(t1, x1);\n\tconst y6 = uint32.xor(y15, x7);\n\tconst y10 = uint32.xor(y15, t0);\n\tconst y11 = uint32.xor(y20, y9);\n\tconst y7 = uint32.xor(x7, y11);\n\tconst y17 = uint32.xor(y10, y11);\n\tconst y19 = uint32.xor(y10, y8);\n\tconst y16 = uint32.xor(t0, y11);\n\tconst y21 = uint32.xor(y13, y16);\n\tconst y18 = uint32.xor(x0, y16);\n\n\t//\n\t// Non-linear section.\n\t//\n\tconst t2 = uint32.and(y12, y15);\n\tconst t3 = uint32.and(y3, y6);\n\tconst t4 = uint32.xor(t3, t2);\n\tconst t5 = uint32.and(y4, x7);\n\tconst t6 = uint32.xor(t5, t2);\n\tconst t7 = uint32.and(y13, y16);\n\tconst t8 = uint32.and(y5, y1);\n\tconst t9 = uint32.xor(t8, t7);\n\tconst t10 = uint32.and(y2, y7);\n\tconst t11 = uint32.xor(t10, t7);\n\tconst t12 = uint32.and(y9, y11);\n\tconst t13 = uint32.and(y14, y17);\n\tconst t14 = uint32.xor(t13, t12);\n\tconst t15 = uint32.and(y8, y10);\n\tconst t16 = uint32.xor(t15, t12);\n\tconst t17 = uint32.xor(t4, t14);\n\tconst t18 = uint32.xor(t6, t16);\n\tconst t19 = uint32.xor(t9, t14);\n\tconst t20 = uint32.xor(t11, t16);\n\tconst t21 = uint32.xor(t17, y20);\n\tconst t22 = uint32.xor(t18, y19);\n\tconst t23 = uint32.xor(t19, y21);\n\tconst t24 = uint32.xor(t20, y18);\n\n\tconst t25 = uint32.xor(t21, t22);\n\tconst t26 = uint32.and(t21, t23);\n\tconst t27 = uint32.xor(t24, t26);\n\tconst t28 = uint32.and(t25, t27);\n\tconst t29 = uint32.xor(t28, t22);\n\tconst t30 = uint32.xor(t23, t24);\n\tconst t31 = uint32.xor(t22, t26);\n\tconst t32 = uint32.and(t31, t30);\n\tconst t33 = uint32.xor(t32, t24);\n\tconst t34 = uint32.xor(t23, t33);\n\tconst t35 = uint32.xor(t27, t33);\n\tconst t36 = uint32.and(t24, t35);\n\tconst t37 = uint32.xor(t36, t34);\n\tconst t38 = uint32.xor(t27, t36);\n\tconst t39 = uint32.and(t29, t38);\n\tconst t40 = uint32.xor(t25, t39);\n\n\tconst t41 = uint32.xor(t40, t37);\n\tconst t42 = uint32.xor(t29, t33);\n\tconst t43 = uint32.xor(t29, t40);\n\tconst t44 = uint32.xor(t33, t37);\n\tconst t45 = uint32.xor(t42, t41);\n\tconst z0 = uint32.and(t44, y15);\n\tconst z1 = uint32.and(t37, y6);\n\tconst z2 = uint32.and(t33, x7);\n\tconst z3 = uint32.and(t43, y16);\n\tconst z4 = uint32.and(t40, y1);\n\tconst z5 = uint32.and(t29, y7);\n\tconst z6 = uint32.and(t42, y11);\n\tconst z7 = uint32.and(t45, y17);\n\tconst z8 = uint32.and(t41, y10);\n\tconst z9 = uint32.and(t44, y12);\n\tconst z10 = uint32.and(t37, y3);\n\tconst z11 = uint32.and(t33, y4);\n\tconst z12 = uint32.and(t43, y13);\n\tconst z13 = uint32.and(t40, y5);\n\tconst z14 = uint32.and(t29, y2);\n\tconst z15 = uint32.and(t42, y9);\n\tconst z16 = uint32.and(t45, y14);\n\tconst z17 = uint32.and(t41, y8);\n\n\t//\n\t// Bottom linear transformation.\n\t//\n\tconst t46 = uint32.xor(z15, z16);\n\tconst t47 = uint32.xor(z10, z11);\n\tconst t48 = uint32.xor(z5, z13);\n\tconst t49 = uint32.xor(z9, z10);\n\tconst t50 = uint32.xor(z2, z12);\n\tconst t51 = uint32.xor(z2, z5);\n\tconst t52 = uint32.xor(z7, z8);\n\tconst t53 = uint32.xor(z0, z3);\n\tconst t54 = uint32.xor(z6, z7);\n\tconst t55 = uint32.xor(z16, z17);\n\tconst t56 = uint32.xor(z12, t48);\n\tconst t57 = uint32.xor(t50, t53);\n\tconst t58 = uint32.xor(z4, t46);\n\tconst t59 = uint32.xor(z3, t54);\n\tconst t60 = uint32.xor(t46, t57);\n\tconst t61 = uint32.xor(z14, t57);\n\tconst t62 = uint32.xor(t52, t58);\n\tconst t63 = uint32.xor(t49, t58);\n\tconst t64 = uint32.xor(z4, t59);\n\tconst t65 = uint32.xor(t61, t62);\n\tconst t66 = uint32.xor(z1, t63);\n\tconst s0 = uint32.xor(t59, t63);\n\tconst s6 = uint32.xor(t56, uint32.not(t62));\n\tconst s7 = uint32.xor(t48, uint32.not(t60));\n\tconst t67 = uint32.xor(t64, t65);\n\tconst s3 = uint32.xor(t53, t66);\n\tconst s4 = uint32.xor(t51, t66);\n\tconst s5 = uint32.xor(t47, t65);\n\tconst s1 = uint32.xor(t64, uint32.not(s3));\n\tconst s2 = uint32.xor(t55, uint32.not(t67));\n\n\tq[7] = s0;\n\tq[6] = s1;\n\tq[5] = s2;\n\tq[4] = s3;\n\tq[3] = s4;\n\tq[2] = s5;\n\tq[1] = s6;\n\tq[0] = s7;\n}\n\n// ShiftRows\nfunction shiftRows(q) {\n\tfor (let i = 0; i < 8; i++) {\n\t\tconst x = q[i];\n\n\t\tq[i] = uint32.or(\n\t\t\tuint32.and(x, shiftRowsMask0),\n\t\t\tuint32.shiftRight(uint32.and(x, shiftRowsMask1), 2),\n\t\t\tuint32.shiftLeft(uint32.and(x, shiftRowsMask2), 6),\n\t\t\tuint32.shiftRight(uint32.and(x, shiftRowsMask3), 4),\n\t\t\tuint32.shiftLeft(uint32.and(x, shiftRowsMask4), 4),\n\t\t\tuint32.shiftRight(uint32.and(x, shiftRowsMask5), 6),\n\t\t\tuint32.shiftLeft(uint32.and(x, shiftRowsMask6), 2)\n\t\t);\n\t}\n}\n\n// MixColumns\nfunction mixColumns(q) {\n\tconst q0 = q[0];\n\tconst q1 = q[1];\n\tconst q2 = q[2];\n\tconst q3 = q[3];\n\tconst q4 = q[4];\n\tconst q5 = q[5];\n\tconst q6 = q[6];\n\tconst q7 = q[7];\n\n\tconst r0 = uint32.or(uint32.shiftRight(q0, 8), uint32.shiftLeft(q0, 24));\n\tconst r1 = uint32.or(uint32.shiftRight(q1, 8), uint32.shiftLeft(q1, 24));\n\tconst r2 = uint32.or(uint32.shiftRight(q2, 8), uint32.shiftLeft(q2, 24));\n\tconst r3 = uint32.or(uint32.shiftRight(q3, 8), uint32.shiftLeft(q3, 24));\n\tconst r4 = uint32.or(uint32.shiftRight(q4, 8), uint32.shiftLeft(q4, 24));\n\tconst r5 = uint32.or(uint32.shiftRight(q5, 8), uint32.shiftLeft(q5, 24));\n\tconst r6 = uint32.or(uint32.shiftRight(q6, 8), uint32.shiftLeft(q6, 24));\n\tconst r7 = uint32.or(uint32.shiftRight(q7, 8), uint32.shiftLeft(q7, 24));\n\n\tq[0] = uint32.xor(q7, r7, r0, uint32.rotateRight(uint32.xor(q0, r0), 16));\n\tq[1] = uint32.xor(q0, r0, q7, r7, r1, uint32.rotateRight(uint32.xor(q1, r1), 16));\n\tq[2] = uint32.xor(q1, r1, r2, uint32.rotateRight(uint32.xor(q2, r2), 16));\n\tq[3] = uint32.xor(q2, r2, q7, r7, r3, uint32.rotateRight(uint32.xor(q3, r3), 16));\n\tq[4] = uint32.xor(q3, r3, q7, r7, r4, uint32.rotateRight(uint32.xor(q4, r4), 16));\n\tq[5] = uint32.xor(q4, r4, r5, uint32.rotateRight(uint32.xor(q5, r5), 16));\n\tq[6] = uint32.xor(q5, r5, r6, uint32.rotateRight(uint32.xor(q6, r6), 16));\n\tq[7] = uint32.xor(q6, r6, r7, uint32.rotateRight(uint32.xor(q7, r7), 16));\n}\n\nfunction load4xU32(q, src) {\n\tconst srcView = new DataView(src.buffer);\n\tq[0] = srcView.getUint32(0 + src.byteOffset, true);\n\tq[2] = srcView.getUint32(4 + src.byteOffset, true);\n\tq[4] = srcView.getUint32(8 + src.byteOffset, true);\n\tq[6] = srcView.getUint32(12 + src.byteOffset, true);\n\tq[1] = 0;\n\tq[3] = 0;\n\tq[5] = 0;\n\tq[7] = 0;\n\tortho(q)\n}\n\nfunction load8xU32(q, src0, src1) {\n\tconst src0View = new DataView(src0.buffer);\n\tconst src1View = new DataView(src1.buffer);\n\tq[0] = src0View.getUint32(0 + src0.byteOffset, true);\n\tq[2] = src0View.getUint32(4 + src0.byteOffset, true);\n\tq[4] = src0View.getUint32(8 + src0.byteOffset, true);\n\tq[6] = src0View.getUint32(12 + src0.byteOffset, true);\n\tq[1] = src1View.getUint32(0 + src1.byteOffset, true);\n\tq[3] = src1View.getUint32(4 + src1.byteOffset, true);\n\tq[5] = src1View.getUint32(8 + src1.byteOffset, true);\n\tq[7] = src1View.getUint32(12 + src1.byteOffset, true);\n\tortho(q)\n}\n\nfunction store4xU32(dst, q) {\n\tortho(q);\n\tconst dstView = new DataView(dst.buffer);\n\tdstView.setUint32(0 + dst.byteOffset, q[0], true);\n\tdstView.setUint32(4 + dst.byteOffset, q[2], true);\n\tdstView.setUint32(8 + dst.byteOffset, q[4], true);\n\tdstView.setUint32(12 + dst.byteOffset, q[6], true);\n}\n\nfunction store8xU32(dst0, dst1, q) {\n\tortho(q);\n\tconst dst0View = new DataView(dst0.buffer);\n\tconst dst1View = new DataView(dst1.buffer);\n\tdst0View.setUint32(0 + dst0.byteOffset, q[0], true);\n\tdst0View.setUint32(4 + dst0.byteOffset, q[2], true);\n\tdst0View.setUint32(8 + dst0.byteOffset, q[4], true);\n\tdst0View.setUint32(12 + dst0.byteOffset, q[6], true);\n\tdst1View.setUint32(0 + dst1.byteOffset, q[1], true);\n\tdst1View.setUint32(4 + dst1.byteOffset, q[3], true);\n\tdst1View.setUint32(8 + dst1.byteOffset, q[5], true);\n\tdst1View.setUint32(12 + dst1.byteOffset, q[7], true);\n}\n\nfunction ortho(q) {\n\tfor (let i = 0; i < 8; i += 2) {\n\t\tconst q0 = q[i];\n\t\tconst q1 = q[i+1];\n\n\t\tq[i] = uint32.or(uint32.and(q0, oddsMask), uint32.shiftLeft(uint32.and(q1, oddsMask), 1));\n\t\tq[i+1] = uint32.or(uint32.shiftRight(uint32.and(q0, evensMask), 1), uint32.and(q1, evensMask));\n\t}\n\n\tfor (let i = 0; i < 8; i += 4) {\n\t\tconst q0 = q[i]\n\t\tconst q1 = q[i+1];\n\t\tconst q2 = q[i+2];\n\t\tconst q3 = q[i+3];\n\n\t\tq[i] = uint32.or(uint32.and(q0, cl4), uint32.shiftLeft(uint32.and(q2, cl4), 2));\n\t\tq[i+2] = uint32.or(uint32.shiftRight(uint32.and(q0, ch4), 2), uint32.and(q2, ch4));\n\t\tq[i+1] = uint32.or(uint32.and(q1, cl4), uint32.shiftLeft(uint32.and(q3, cl4), 2));\n\t\tq[i+3] = uint32.or(uint32.shiftRight(uint32.and(q1, ch4), 2), uint32.and(q3, ch4));\n\t}\n\n\tfor (let i = 0; i < 4; i++) {\n\t\tconst q0 = q[i];\n\t\tconst q4 = q[i+4];\n\n\t\tq[i] = uint32.or(uint32.and(q0, cl8), uint32.shiftLeft(uint32.and(q4, cl8), 4));\n\t\tq[i+4] = uint32.or(uint32.shiftRight(uint32.and(q0, ch8), 4), uint32.and(q4, ch8));\n\t}\n}\n\nfunction rkeyOrtho(q, key) {\n\tconst keyView = new DataView(key.buffer);\n\tfor (let i = 0; i < 4; i++) {\n\t\tconst x = keyView.getUint32(i*4 + key.byteOffset, true);\n\t\tq[i*2] = x;\n\t\tq[i*2+1] = x;\n\t}\n\tortho(q);\n\n\tfor (let i = 0, j = 0; i < 4; i = i + 1, j = j + 2) {\n\t\tlet x = uint32.or(uint32.and(q[j+0], oddsMask), uint32.and(q[j+1], evensMask))\n\t\tlet y = x;\n\n\t\tx = uint32.and(x, oddsMask);\n\t\tq[j] = uint32.or(x, uint32.shiftLeft(x, 1));\n\t\ty = uint32.and(y, evensMask);\n\t\tq[j+1] = uint32.or(y, uint32.shiftRight(y, 1));\n\t}\n}\n\nfunction skeyExpand(skey, numRounds, compSkey) {\n\tconst n = (numRounds + 1) * 4;\n\n\tfor (let u = 0, v = 0; u < n; u = u + 1, v = v + 2) {\n\t\tlet x = compSkey[u];\n\t\tlet y = compSkey[u];\n\n\t\tx = uint32.and(x, oddsMask);\n\t\tskey[v] = uint32.or(x, uint32.shiftLeft(x, 1));\n\t\ty = uint32.and(y, evensMask);\n\t\tskey[v+1] = uint32.or(y, uint32.shiftRight(y, 1));\n\t}\n}\n\n//\n// ECB-AES (example/testing), and associated package private helpers.\n//\n\nfunction _subWord(x) {\n\tlet q = new\tUint32Array([x, x, x, x, x, x, x, x]);\n\tortho(q);\n\tsubBytes(q);\n\tortho(q);\n\treturn q[0];\n}\n\nfunction keySched(compSkey, key) {\n\tlet numRounds = 0;\n\tconst keyLen = key.byteLength;\n\tswitch (keyLen) {\n\tcase 16:\n\t\tnumRounds = 10;\n\t\tbreak;\n\tcase 24:\n\t\tnumRounds = 12;\n\t\tbreak;\n\tcase 32:\n\t\tnumRounds = 14;\n\t\tbreak;\n\tdefault:\n\t\tthrow 'aes: invalid key length';\n\t}\n\n\tlet skey = new Uint32Array(120);\n\tlet tmp = 0;\n\tconst nk = keyLen / 4;\n\tconst nkf = (numRounds + 1) * 4;\n\tconst keyView = new DataView(key.buffer);\n\tfor (let i = 0; i < nk; i++) {\n\t\ttmp = keyView.getUint32(i*4 + key.byteOffset, true);\n\t\tskey[i*2] = tmp;\n\t\tskey[i*2+1] = tmp;\n\t}\n\tfor (let i = nk, j = 0, k = 0; i < nkf; i++) {\n\t\tif (j == 0) {\n\t\t\ttmp = uint32.or(uint32.shiftLeft(tmp, 24), uint32.shiftRight(tmp, 8));\n\t\t\ttmp = uint32.xor(_subWord(tmp), uint32.fromBytesBigEndian(0x00, 0x00, 0x00, rcon[k]));\n\t\t} else if (nk > 6 && j == 4) {\n\t\t\ttmp = _subWord(tmp);\n\t\t}\n\t\ttmp = uint32.xor(tmp, skey[(i-nk)*2]);\n\t\tskey[i*2] = tmp;\n\t\tskey[i*2+1] = tmp;\n\t\tj++;\n\t\tif (j == nk) {\n\t\t\tj = 0;\n\t\t\tk++;\n\t\t}\n\t}\n\tfor (let i = 0; i < nkf; i += 4) {\n\t\tlet stmp = skey.slice(i*2, i*2+8);\n\t\tortho(stmp);\n\t\tfor (let j = 0; j < 8; j++) {\n\t\t\tskey[i*2+j] = stmp[j];\n\t\t}\n\t}\n\tfor (let i = 0, j = 0; i < nkf; i = i + 1, j = j + 2) {\n\t\tcompSkey[i] = uint32.or(uint32.and(skey[j], oddsMask), uint32.and(skey[j+1], evensMask));\n\t}\n\treturn numRounds;\n}\n\nfunction _encrypt(numRounds, skey, q) {\n\taddRoundKey(q, skey);\n\tfor (let u = 1; u < numRounds; u++) {\n\t\tsubBytes(q);\n\t\tshiftRows(q);\n\t\tmixColumns(q);\n\t\taddRoundKey(q, skey.slice(u*8, u*8+8));\n\t}\n\tsubBytes(q);\n\tshiftRows(q);\n\taddRoundKey(q, skey.slice(numRounds*8, numRounds*8+8));\n}\n\nclass ECB {\n\tconstructor(key) {\n\t\tlet skey = new Uint32Array(60);\n\n\t\tthis.numRounds = keySched(skey, key);\n\t\tthis.skeyExpanded = new Uint32Array(120);\n\t\tskeyExpand(this.skeyExpanded, this.numRounds, skey);\n\t}\n\n\tencrypt(dst, src) {\n\t\tlet q = newQ();\n\n\t\tload4xU32(q, src);\n\t\t_encrypt(this.numRounds, this.skeyExpanded, q);\n\t\tstore4xU32(dst, q);\n\t}\n\n\tencrypt2x(dst0, dst1, src0, src1) {\n\t\tlet q = newQ();\n\n\t\tload8xU32(q, src0, src1);\n\t\t_encrypt(this.numRounds, this.skeyExpanded, q);\n\t\tstore8xU32(dst0, dst1, q);\n\t}\n}\n\nmodule.exports = {\n\t// ECB-AES, probably shouldn't be used for more than testing.\n\tECB: ECB,\n\n\t// Implementation internals, exposed for the purpose of constructing\n\t// things based on the AES round function.\n\tnewQ,\n\tload4xU32,\n\tload8xU32,\n\tstore4xU32,\n\tstore8xU32,\n\tortho,\n\trkeyOrtho,\n\taddRoundKey,\n\tsubBytes,\n\tshiftRows,\n\tmixColumns,\n\n\tskeyExpand,\n\tkeySched,\n};\n","// Copyright (c) 2019 Oasis Labs Inc. <info@oasislabs.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n// BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nvar uint32 = require('uint32');\n\nconst te0 = new Uint32Array([\n\t0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d,\n\t0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554,\n\t0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d,\n\t0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a,\n\t0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87,\n\t0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b,\n\t0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea,\n\t0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b,\n\t0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a,\n\t0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f,\n\t0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108,\n\t0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f,\n\t0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e,\n\t0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5,\n\t0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d,\n\t0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f,\n\t0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e,\n\t0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb,\n\t0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce,\n\t0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497,\n\t0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c,\n\t0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed,\n\t0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b,\n\t0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a,\n\t0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16,\n\t0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594,\n\t0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81,\n\t0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3,\n\t0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a,\n\t0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504,\n\t0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163,\n\t0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d,\n\t0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f,\n\t0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739,\n\t0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47,\n\t0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395,\n\t0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f,\n\t0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883,\n\t0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c,\n\t0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76,\n\t0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e,\n\t0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4,\n\t0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6,\n\t0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b,\n\t0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7,\n\t0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0,\n\t0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25,\n\t0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818,\n\t0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72,\n\t0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651,\n\t0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21,\n\t0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85,\n\t0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa,\n\t0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12,\n\t0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0,\n\t0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9,\n\t0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133,\n\t0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7,\n\t0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920,\n\t0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a,\n\t0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17,\n\t0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8,\n\t0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11,\n\t0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a\n]);\n\nconst te1 = new Uint32Array([\n\t0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b,\n\t0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5,\n\t0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b,\n\t0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676,\n\t0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d,\n\t0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0,\n\t0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf,\n\t0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0,\n\t0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626,\n\t0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc,\n\t0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1,\n\t0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515,\n\t0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3,\n\t0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a,\n\t0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2,\n\t0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575,\n\t0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a,\n\t0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0,\n\t0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3,\n\t0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484,\n\t0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded,\n\t0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b,\n\t0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939,\n\t0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf,\n\t0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb,\n\t0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585,\n\t0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f,\n\t0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8,\n\t0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f,\n\t0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5,\n\t0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121,\n\t0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2,\n\t0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec,\n\t0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717,\n\t0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d,\n\t0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373,\n\t0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc,\n\t0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888,\n\t0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414,\n\t0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb,\n\t0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a,\n\t0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c,\n\t0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262,\n\t0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979,\n\t0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d,\n\t0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9,\n\t0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea,\n\t0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808,\n\t0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e,\n\t0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6,\n\t0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f,\n\t0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a,\n\t0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666,\n\t0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e,\n\t0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9,\n\t0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e,\n\t0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111,\n\t0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494,\n\t0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9,\n\t0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf,\n\t0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d,\n\t0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868,\n\t0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f,\n\t0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616\n]);\n\nconst te2 = new Uint32Array([\n\t0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b,\n\t0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5,\n\t0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b,\n\t0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76,\n\t0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d,\n\t0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0,\n\t0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af,\n\t0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0,\n\t0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26,\n\t0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc,\n\t0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1,\n\t0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15,\n\t0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3,\n\t0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a,\n\t0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2,\n\t0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75,\n\t0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a,\n\t0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0,\n\t0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3,\n\t0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384,\n\t0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed,\n\t0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b,\n\t0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239,\n\t0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf,\n\t0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb,\n\t0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185,\n\t0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f,\n\t0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8,\n\t0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f,\n\t0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5,\n\t0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221,\n\t0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2,\n\t0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec,\n\t0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17,\n\t0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d,\n\t0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673,\n\t0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc,\n\t0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88,\n\t0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814,\n\t0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb,\n\t0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a,\n\t0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c,\n\t0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462,\n\t0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279,\n\t0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d,\n\t0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9,\n\t0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea,\n\t0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008,\n\t0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e,\n\t0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6,\n\t0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f,\n\t0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a,\n\t0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66,\n\t0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e,\n\t0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9,\n\t0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e,\n\t0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211,\n\t0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394,\n\t0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9,\n\t0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df,\n\t0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d,\n\t0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068,\n\t0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f,\n\t0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16\n]);\n\nconst te3 = new Uint32Array([\n\t0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6,\n\t0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491,\n\t0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56,\n\t0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec,\n\t0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa,\n\t0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb,\n\t0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45,\n\t0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b,\n\t0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c,\n\t0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83,\n\t0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9,\n\t0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a,\n\t0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d,\n\t0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f,\n\t0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf,\n\t0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea,\n\t0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34,\n\t0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b,\n\t0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d,\n\t0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713,\n\t0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1,\n\t0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6,\n\t0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72,\n\t0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85,\n\t0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed,\n\t0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411,\n\t0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe,\n\t0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b,\n\t0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05,\n\t0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1,\n\t0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342,\n\t0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf,\n\t0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3,\n\t0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e,\n\t0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a,\n\t0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6,\n\t0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3,\n\t0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b,\n\t0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28,\n\t0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad,\n\t0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14,\n\t0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8,\n\t0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4,\n\t0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2,\n\t0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da,\n\t0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049,\n\t0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf,\n\t0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810,\n\t0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c,\n\t0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197,\n\t0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e,\n\t0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f,\n\t0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc,\n\t0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c,\n\t0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069,\n\t0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927,\n\t0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322,\n\t0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733,\n\t0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9,\n\t0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5,\n\t0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a,\n\t0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0,\n\t0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e,\n\t0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c\n]);\n\nconst andMask = uint32.fromBytesBigEndian(0x00, 0x00, 0x00, 0xff);\n\nfunction aesencVartime(s0, s1, s2, s3, roundKey) {\n\tconst rkView = new DataView(roundKey.buffer);\n\tconst rk0 = rkView.getUint32(0 + roundKey.byteOffset, false);\n\tconst rk1 = rkView.getUint32(4 + roundKey.byteOffset, false);\n\tconst rk2 = rkView.getUint32(8 + roundKey.byteOffset, false);\n\tconst rk3 = rkView.getUint32(12 + roundKey.byteOffset, false);\n\n\tconst t0 = uint32.xor(\n\t\tte0[uint32.and(uint32.shiftRight(s0, 24), andMask)],\n\t\tte1[uint32.and(uint32.shiftRight(s1, 16), andMask)],\n\t\tte2[uint32.and(uint32.shiftRight(s2, 8), andMask)],\n\t\tte3[uint32.and(s3, andMask)],\n\t\trk0\n\t);\n\n\tconst t1 = uint32.xor(\n\t\tte0[uint32.and(uint32.shiftRight(s1, 24), andMask)],\n\t\tte1[uint32.and(uint32.shiftRight(s2, 16), andMask)],\n\t\tte2[uint32.and(uint32.shiftRight(s3, 8), andMask)],\n\t\tte3[uint32.and(s0, andMask)],\n\t\trk1\n\t);\n\n\tconst t2 = uint32.xor(\n\t\tte0[uint32.and(uint32.shiftRight(s2, 24), andMask)],\n\t\tte1[uint32.and(uint32.shiftRight(s3, 16), andMask)],\n\t\tte2[uint32.and(uint32.shiftRight(s0, 8), andMask)],\n\t\tte3[uint32.and(s1, andMask)],\n\t\trk2\n\t);\n\n\tconst t3 = uint32.xor(\n\t\tte0[uint32.and(uint32.shiftRight(s3, 24), andMask)],\n\t\tte1[uint32.and(uint32.shiftRight(s0, 16), andMask)],\n\t\tte2[uint32.and(uint32.shiftRight(s1, 8), andMask)],\n\t\tte3[uint32.and(s2, andMask)],\n\t\trk3\n\t);\n\n\treturn [t0, t1, t2, t3];\n}\n\nmodule.exports = {\n\taesencVartime\n};\n","export default {};\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = (x[j] + 128) >> 8;\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i, mlen;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  mlen = -1;\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  mlen = n;\n  return mlen;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","/**\n * Tweetnacl utility module to provide a consistent import for both node and browsers.\n */\n\nimport * as _nacl from 'tweetnacl';\n\nlet nacl: any = undefined;\n\n// Browser.\n/* tslint:disable */\nif (typeof window !== 'undefined') {\n  // @ts-ignore\n  nacl = _nacl.default;\n}\n// Node.\nelse {\n  nacl = require('tweetnacl');\n}\n\nexport default nacl;\n","import { Nonce, PublicKey, PrivateKey } from '.';\n\nexport class EncryptError extends Error {\n  constructor(readonly encParams: EncryptionParams, ...params: any[]) {\n    super(...params);\n  }\n}\n\ntype EncryptionParams = {\n  nonce: Nonce;\n  ciphertext: Uint8Array;\n  peerPublicKey: PublicKey;\n  publicKey?: PublicKey;\n  aad: Uint8Array;\n};\n\nexport class KeyStoreError extends Error {}\n","import { bytes } from '@oasislabs/common';\nimport { RpcOptions } from './oasis-gateway';\n\nexport function NO_CODE_ERROR_MSG(address: Uint8Array): string {\n  return `\n    No code exists for address ${bytes.toHex(address)}.\n    Either your address is incorrect or the deploy failed.\n  `;\n}\n\nexport class RpcError extends Error {\n  constructor(\n    readonly rpcArgs: any[],\n    readonly rpcOptions?: RpcOptions,\n    ...params: any[]\n  ) {\n    super(...params);\n  }\n}\n\nexport class DeployError extends Error {\n  constructor(readonly deployArgs: any[], ...params: any[]) {\n    super(...params);\n  }\n}\n\nexport class ServiceError extends Error {\n  constructor(readonly address: Uint8Array, ...params: any[]) {\n    super(...params);\n  }\n}\n","'use strict';\n\nclass QuickLRU {\n\tconstructor(options = {}) {\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst value = this.oldCache.get(key);\n\t\t\tthis.oldCache.delete(key);\n\t\t\tthis._set(key, value);\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tset(key, value) {\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, value);\n\t\t} else {\n\t\t\tthis._set(key, value);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\thas(key) {\n\t\treturn this.cache.has(key) || this.oldCache.has(key);\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this.oldCache.get(key);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tyield item;\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget size() {\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn this._size + oldCacheSize;\n\t}\n}\n\nmodule.exports = QuickLRU;\n","'use strict';\nconst mapObj = require('map-obj');\nconst camelCase = require('camelcase');\nconst QuickLru = require('quick-lru');\n\nconst has = (array, key) => array.some(x => typeof x === 'string' ? x === key : x.test(key));\nconst cache = new QuickLru({maxSize: 100000});\n\nconst camelCaseConvert = (input, options) => {\n\toptions = {\n\t\tdeep: false,\n\t\t...options\n\t};\n\n\tconst {exclude} = options;\n\n\treturn mapObj(input, (key, value) => {\n\t\tif (!(exclude && has(exclude, key))) {\n\t\t\tif (cache.has(key)) {\n\t\t\t\tkey = cache.get(key);\n\t\t\t} else {\n\t\t\t\tconst ret = camelCase(key);\n\n\t\t\t\tif (key.length < 100) { // Prevent abuse\n\t\t\t\t\tcache.set(key, ret);\n\t\t\t\t}\n\n\t\t\t\tkey = ret;\n\t\t\t}\n\t\t}\n\n\t\treturn [key, value];\n\t}, {deep: options.deep});\n};\n\nmodule.exports = (input, options) => {\n\tif (Array.isArray(input)) {\n\t\treturn Object.keys(input).map(key => camelCaseConvert(input[key], options));\n\t}\n\n\treturn camelCaseConvert(input, options);\n};\n\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","import { bytes } from '@oasislabs/common';\n\nexport type DeployHeaderOptions = {\n  expiry?: number;\n  confidential?: boolean;\n};\n\nexport class DeployHeaderError extends Error {}\n\n// TODO: change all apis here to take Uint8Arrays as input/output instead\n//       of hex strings.\nexport class DeployHeader {\n  /**\n   * @param {Number} version is the header version number.\n   * @param {Object} is the header body with two fields, expiry (Number)\n   *        and confidential (boolean).\n   */\n  constructor(public version: number, public body: DeployHeaderOptions) {}\n\n  data(): Uint8Array {\n    let bodyBytes = DeployHeaderWriter.body(this.body);\n    return new Uint8Array(\n      bytes.concat([\n        DeployHeader.prefix(),\n        DeployHeaderWriter.shortToBytes(this.version),\n        DeployHeaderWriter.shortToBytes(bodyBytes.length),\n        bodyBytes,\n      ])\n    );\n  }\n\n  /**\n   * @param   {Object} headerBody is the header object to encode.\n   * @param   {Uint8Array} deploycode is the bytecode to which we want to prefix the header.\n   * @returns The deploycode with the header prefixed as the encoded wire format, i.e.,\n   *          b'\\0sis' || version (2 bytes big endian) || length (2 bytes big endian) || json-header.\n   *          Overrides any header fields that may already exist in the deploycode.\n   */\n  public static deployCode(\n    headerBody: DeployHeaderOptions,\n    deploycode: Uint8Array\n  ): Uint8Array {\n    DeployHeader.deployCodePreconditions(headerBody, deploycode);\n\n    if (Object.keys(headerBody).length === 0) {\n      return deploycode; // No header, so do nothing.\n    }\n\n    // Read the existing header, if it exists.\n    let currentHeader = DeployHeaderReader.header(deploycode);\n    // Bytecode to create the contract without the serialized deploy header prepended.\n    let initcode: Uint8Array;\n    // No header so just make a new one. The initcode is the given deploycode.\n    if (currentHeader === null) {\n      currentHeader = new DeployHeader(DeployHeader.currentVersion(), {});\n      initcode = deploycode;\n    }\n    // Extract the initcode from the deploy code.\n    else {\n      initcode = DeployHeaderReader.initcode(deploycode);\n    }\n    if (headerBody) {\n      Object.assign(currentHeader.body, headerBody);\n    }\n\n    let headerData = currentHeader.data();\n    let code = new Uint8Array(headerData.length + initcode.length);\n    code.set(headerData);\n    code.set(initcode, headerData.length);\n\n    return code;\n  }\n\n  private static deployCodePreconditions(\n    headerBody: DeployHeaderOptions,\n    deploycode: Uint8Array\n  ) {\n    if (!headerBody) {\n      throw new Error('No header given');\n    }\n    if (deploycode.length === 0) {\n      throw new Error('Malformed deploycode');\n    }\n    if (!DeployHeader.isValidBody(headerBody)) {\n      throw new Error('Malformed deploycode or header');\n    }\n  }\n\n  /**\n   * @returns true iff the keys in the headerBody are part of the valid set.\n   */\n  public static isValidBody(headerBody: DeployHeaderOptions): boolean {\n    let validKeys = ['expiry', 'confidential'];\n\n    let keys = Object.keys(headerBody);\n    for (let k = 0; k < keys.length; k += 1) {\n      if (!validKeys.includes(keys[k])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns the current version of the header.\n   */\n  public static currentVersion(): number {\n    return 1;\n  }\n\n  public static prefix(): Uint8Array {\n    return bytes.encodeUtf8('\\0sis');\n  }\n}\n\n/**\n * A collection of utilities for parsing through deploycode including the Oasis contract\n * deploy header in the form of a hex string.\n */\nexport class DeployHeaderReader {\n  /**\n   * @param   {String} deploycode is the transaction data to deploy a contract as a hex string.\n   * @returns the contract deploy header prefixed to the deploycode, otherwise, null.\n   */\n  public static header(deploycode: Uint8Array): DeployHeader | null {\n    if (!DeployHeaderReader.codeHasPrefixPrefix(deploycode)) {\n      return null;\n    }\n    let version = DeployHeaderReader.version(deploycode);\n    let body = DeployHeaderReader.body(deploycode);\n\n    if (!DeployHeader.isValidBody(body)) {\n      throw Error(`Invalid body ${JSON.stringify(body)}`);\n    }\n\n    return new DeployHeader(version, body);\n  }\n  /**\n   * @param {Uint8Array} deploycode is a hex string of the header || initcode.\n   */\n  public static body(deploycode: Uint8Array): DeployHeaderOptions {\n    if (!DeployHeaderReader.codeHasPrefixPrefix(deploycode)) {\n      throw new DeployHeaderError('code must have the header prefiix');\n    }\n\n    let length = DeployHeaderReader.size(deploycode);\n    let serializedBody = deploycode.subarray(\n      DeployHeaderReader.bodyStart(),\n      DeployHeaderReader.bodyStart() + length\n    );\n\n    return JSON.parse(bytes.decodeUtf8(serializedBody));\n  }\n\n  /**\n   * @param {String} deploycode is a hex string of the header || initcode.\n   */\n  public static size(deploycode: Uint8Array): number {\n    if (!DeployHeaderReader.codeHasPrefixPrefix(deploycode)) {\n      throw new DeployHeaderError('code must have the header prefix');\n    }\n\n    let start = DeployHeaderReader.sizeStart();\n    let lengthBytes = deploycode.subarray(\n      start,\n      start + DeployHeaderReader.sizeLength()\n    );\n\n    return DeployHeaderReader.shortFromBytes(lengthBytes);\n  }\n\n  /**\n   * @param {String} deploycode is a hex string of the header || initcode.\n   */\n  public static version(deploycode: Uint8Array): number {\n    if (!DeployHeaderReader.codeHasPrefixPrefix(deploycode)) {\n      throw new DeployHeaderError('code must have the header prefix');\n    }\n\n    let start = DeployHeaderReader.versionStart();\n    let versionBytes = deploycode.subarray(\n      start,\n      start + DeployHeaderReader.versionLength()\n    );\n\n    return DeployHeaderReader.shortFromBytes(versionBytes);\n  }\n\n  /**\n   * @param {String} deploycode is a hex string of the header || initcode.\n   */\n  public static initcode(deploycode: Uint8Array): Uint8Array {\n    if (!DeployHeaderReader.codeHasPrefixPrefix(deploycode)) {\n      throw new DeployHeaderError('code must have the header prefix');\n    }\n    return deploycode.subarray(DeployHeaderReader.initcodeStart(deploycode));\n  }\n\n  private static initcodeStart(deploycode: Uint8Array): number {\n    if (!DeployHeaderReader.codeHasPrefixPrefix(deploycode)) {\n      throw new DeployHeaderError('code must have the header prefix');\n    }\n    return DeployHeaderReader.bodyStart() + DeployHeaderReader.size(deploycode);\n  }\n\n  /**\n   * @param {Uint8Array} the 2-byte representation of the input.\n   * @returns {Number} an unsigned 16-bit number.\n   */\n  public static shortFromBytes(arr: Uint8Array): number {\n    return new DataView(arr.buffer).getUint16(\n      arr.byteOffset,\n      false /* little endian */\n    );\n  }\n\n  public static codeHasPrefixPrefix(code: Uint8Array): boolean {\n    let prefix = DeployHeader.prefix();\n    for (let i = 0; i < prefix.length; i++) {\n      if (code[i] !== prefix[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @returns the hex string index of the start section.\n   */\n  private static versionStart(): number {\n    return DeployHeader.prefix().length;\n  }\n\n  /**\n   * @returns the length of the version in bytes.\n   */\n  public static versionLength(): number {\n    return 2;\n  }\n\n  /**\n   * @returns the index of the starting point of the size section.\n   */\n  private static sizeStart(): number {\n    return (\n      DeployHeaderReader.versionStart() + DeployHeaderReader.versionLength()\n    );\n  }\n\n  /**\n   * @returns the length of the body size in bytes.\n   */\n  private static sizeLength(): number {\n    return 2;\n  }\n\n  /**\n   * @returns the hex string index of the body section.\n   */\n  private static bodyStart(): number {\n    return DeployHeaderReader.sizeStart() + DeployHeaderReader.sizeLength();\n  }\n}\n\nexport class DeployHeaderWriter {\n  public static body(body: DeployHeaderOptions): Uint8Array {\n    return bytes.encodeUtf8(JSON.stringify(body));\n  }\n\n  /**\n   * @param {Number} an unsigned 16-bit number.\n   * @returns {Uint8Array} the 2-byte representation of the input.\n   */\n  public static shortToBytes(num: number): Uint8Array {\n    let arr = new Uint8Array(2);\n    new DataView(arr.buffer).setUint16(\n      0 /* offset */,\n      num,\n      false /* little endian */\n    );\n    return arr;\n  }\n}\n\n// Alias.\nfunction parseFromCode(deploycode: Uint8Array | string): DeployHeader | null {\n  let _deploycode: Uint8Array =\n    typeof deploycode === 'string' ? bytes.parseHex(deploycode) : deploycode;\n\n  return DeployHeaderReader.header(_deploycode);\n}\n\n// Convenience api export.\nexport const header = {\n  parseFromCode,\n  deployCode: DeployHeader.deployCode,\n};\n","import EventEmitter from 'eventemitter3';\n\n/**\n * OasisGateway is the client's interface used to access services running on Oasis.\n */\nexport interface OasisGateway {\n  deploy(request: DeployRequest): Promise<DeployResponse>;\n  rpc(request: RpcRequest): Promise<RpcResponse>;\n  subscribe(request: SubscribeRequest): EventEmitter;\n  unsubscribe(request: UnsubscribeRequest): void;\n  publicKey(request: PublicKeyRequest): Promise<PublicKeyResponse>;\n  getCode(request: GetCodeRequest): Promise<GetCodeResponse>;\n  disconnect(): void;\n  /**\n   * For implementations that manage reconnection internally, this emits advisory\n   * events about its internal connection status:\n   * - `trouble` when it experiences repeated problems connecting\n   * - `ok` when it reconnects after having emitted a `trouble` event\n   */\n  connectionState(): EventEmitter;\n\n  /**\n   * @returns true iff the gateway has a wallet to sign and construct raw\n   *          transactions.\n   */\n  hasSigner(): boolean;\n}\n\nexport type DeployRequest = {\n  data: Uint8Array;\n  options?: RpcOptions;\n};\n\nexport type DeployResponse = {\n  address: Uint8Array;\n};\n\nexport type PublicKeyRequest = {\n  address: Uint8Array;\n};\n\nexport type GetCodeRequest = {\n  address: Uint8Array;\n};\n\nexport type GetCodeResponse = {\n  code: Uint8Array | null;\n};\n\nexport type RpcRequest = {\n  data: Uint8Array;\n  address?: Uint8Array;\n  options?: RpcOptions;\n};\n\nexport type RpcOptions = {\n  gasLimit?: string | number;\n  gasPrice?: string | number;\n  value?: string | number;\n  aad?: string;\n};\n\nexport type RpcResponse = {\n  output: any;\n  error?: Uint8Array;\n};\n\nexport type SubscribeRequest = {\n  event: string;\n  filter?: SubscribeFilter;\n};\n\nexport type SubscribeFilter = {\n  address: Uint8Array;\n  topics: string[];\n};\n\nexport type UnsubscribeRequest = {\n  event: string;\n};\n\nexport type PublicKeyResponse = {\n  publicKey?: Uint8Array;\n};\n\nexport const SubscribeTopic = 'subscription';\n\n/**\n * The default gateway to use if no gateway is provided to the service.\n * This *must* be set before using a service.\n */\nlet _defaultGateway: OasisGateway | undefined = undefined;\n\n/**\n * setGateway sets the default oasis gateway so that all services use it\n * unless explicitly overridden upon construction of the service.\n */\nexport function setGateway(gw: OasisGateway) {\n  _defaultGateway = gw;\n}\n\nexport function defaultOasisGateway(): OasisGateway {\n  if (!_defaultGateway) {\n    throw new Error('the client is not connected to an OasisGateway');\n  }\n  return _defaultGateway;\n}\n","/**\n * The api module defines the types used for the v0/api of the developer\n * gateway.\n */\n\n/**\n * DeveloperGatewayApi represents the path for a URI for the developer gateway.\n */\nexport type DeveloperGatewayApi = {\n  url: string;\n  method: string;\n};\n\n/**\n * Deploys a services.\n */\nexport const DeployApi: DeveloperGatewayApi = {\n  url: 'v0/api/service/deploy',\n  method: 'POST',\n};\n\n/**\n * Invokes an rpc on a service.\n */\nexport const RpcApi: DeveloperGatewayApi = {\n  url: 'v0/api/service/execute',\n  method: 'POST',\n};\n\n/**\n * Retrieives the public key for a service.\n */\nexport const PublicKeyApi: DeveloperGatewayApi = {\n  url: 'v0/api/service/getPublicKey',\n  method: 'POST',\n};\n\n/**\n * Retrieves the code for an address.\n */\nexport const GetCodeApi: DeveloperGatewayApi = {\n  url: 'v0/api/service/getCode',\n  method: 'POST',\n};\n\n/**\n * Polls for an event on a service.\n */\nexport const ServicePollApi: DeveloperGatewayApi = {\n  url: 'v0/api/service/poll',\n  method: 'POST',\n};\n\n/**\n * Subscribes to a gateway topic.\n */\nexport const SubscribeApi: DeveloperGatewayApi = {\n  url: 'v0/api/event/subscribe',\n  method: 'POST',\n};\n\n/**\n * Polls for an event on a subscription.\n */\nexport const SubscribePollApi: DeveloperGatewayApi = {\n  url: 'v0/api/event/poll',\n  method: 'POST',\n};\n\n/**\n * Retrieves the health status of the gateway.\n */\nexport const HealthApi: DeveloperGatewayApi = {\n  url: 'v0/api/health',\n  method: 'GET',\n};\n\n/**\n * Unsubscribes from a `SubscribeApi` subscription.\n */\nexport const UnsubscribeApi: DeveloperGatewayApi = {\n  url: 'v0/api/event/unsubscribe',\n  method: 'POST',\n};\n\n/**\n *  Event is an interface for types that can be fetched by polling on a service.\n */\nexport type Event =\n  | ExecuteServiceEvent\n  | PublicKeyEvent\n  | DeployEvent\n  | ErrorEvent;\n\n/**\n * ExecuteServiceResponse is an asynchronous response that will be obtained\n * using the polling mechanisms.\n */\nexport type ExecuteServiceResponse = {\n  id: number;\n};\n\n/**\n * PollServiceResponse returns a list of asynchronous responses the\n * client requested\n */\nexport type PollServiceResponse = {\n  offset: number;\n  events: Event[] | null;\n};\n\n/**\n * ExecuteServiceEvent is the event that can be polled by the user\n * as a result to a ServiceExecutionRequest.\n */\nexport type ExecuteServiceEvent = {\n  id: number;\n  address: string;\n  output: string;\n};\n\nexport type PublicKeyEvent = {\n  id: number;\n  publicKey: string;\n  timestamp: number;\n  signature: string;\n};\n\nexport type DeployEvent = {\n  id: number;\n  address: string;\n};\n\n/**\n * ErrorEvent is the event that can be polled by the user as a result\n * to a request that failed.\n */\nexport type ErrorEvent = {\n  id: number;\n  cause: Error;\n};\n\nexport type Error = {\n  errorCode: number;\n  description: string;\n};\n","import { EventEmitter } from 'eventemitter3';\nimport { SubscribeTopic } from '@oasislabs/service';\nimport { Http } from './http';\nimport {\n  DeveloperGatewayApi,\n  ServicePollApi,\n  SubscribePollApi,\n  Event,\n} from './api';\n\nexport default class PollingService {\n  /**\n   * Instances of PollingService, one for each unique developer gateway url, used.\n   */\n  private static SERVICES: Map<string, PollingService> = new Map();\n\n  /**\n   * responses emits events when new responses are retrieved from the developer\n   * gateway. Event names are the request ids given by the developer gateway.\n   * Values are the responses themselves.\n   */\n  // @ts-ignore\n  private responses: EventEmitter;\n\n  /**\n   * responseWindow is the datastructure tracking the request id's for which we have\n   * not received responses.\n   */\n  private responseWindow: Window<Event>;\n\n  /**\n   * interval is the polling interval in milliseconds.\n   */\n  private interval: number;\n\n  /**\n   * The timeout object actively being polled. If undefined, then polling is off.\n   */\n  private polling?: any;\n\n  /**\n   * Millisecond timestamp representing the last time we received an event response\n   * from the gateway. When IDLE_TIMELAPSE milliseconds have passed, the\n   * PollingService is considered idle and stops.\n   */\n  private lastResponseTs: number;\n\n  /**\n   * Amount of time that can pass before being considered idle.\n   */\n  private static IDLE_TIMELAPSE = 1000 * 60;\n\n  /**\n   * The constructor should never be invoked directly. To access the PollingService\n   * use `PollingService.instance`.\n   */\n  private constructor(\n    private session: Http,\n    private queueId?: number,\n    responseWindow?: Window<Event>,\n    interval?: number\n  ) {\n    this.responseWindow = responseWindow ? responseWindow : new Window();\n    this.interval = interval ? interval : 1000;\n    this.responses = new EventEmitter();\n    this.lastResponseTs = Date.now();\n  }\n\n  /**\n   * @returns the instance of PollingService for the given url.\n   */\n  public static instance(options: PollingServiceOptions): PollingService {\n    let id = PollingService.id(options);\n\n    if (!PollingService.SERVICES.get(id)) {\n      PollingService.SERVICES.set(\n        id,\n        new PollingService(\n          options.session,\n          options.queueId,\n          // Set the end point of the window to 2**53 if the queueId exists since\n          // it implies a subscription and subscriptions never auto close.\n          options.queueId !== undefined ? new Window(0, 2 ** 53) : new Window(),\n          options.interval\n        )\n      );\n    }\n    return PollingService.SERVICES.get(id)!;\n  }\n\n  /**\n   * @returns the internal identifier for the service specified by the given options.\n   *          This identifier is used to track each individual PollingService object\n   *          cached in PollingService.SERVICES.\n   *\n   *          Not only will different polling services be created for each\n   *          distinct developer gateway url, but also for each unique message\n   *          queue handled by the developer gateway.\n   *\n   *          For the ServicePollApi, there is a single queue for all responses\n   *          related to service apis. For subscriptions, however, there is a\n   *          unique queue for each individudual subscription--hence the use of\n   *          queueId to form the id.\n   */\n  private static id(options: PollingServiceOptions): string {\n    return options.queueId !== undefined\n      ? `${options.url}/${SubscribePollApi}/${options.queueId}`\n      : `${options.url}/${ServicePollApi}`;\n  }\n\n  /**\n   * response is the main api provided by PollingService.\n   *\n   * @returns a promise that resolves to the dev server's response for the given\n   *          requestId.\n   * @param   requestId is the id returned when making the initial request to the\n   *          gateway.\n   */\n  public async response(requestId: number): Promise<any> {\n    return new Promise(resolve => {\n      let cached = this.responseWindow.item(requestId);\n      if (cached) {\n        return resolve(cached);\n      }\n      this.responseWindow.extend(requestId);\n      this.responses.once(`${requestId}`, (response: Event) => {\n        resolve(response);\n      });\n      if (!this.polling) {\n        this.start();\n      }\n    });\n  }\n\n  /**\n   * Initiates the polling service to begin polling for responses.\n   */\n  public start() {\n    this.polling = setInterval(this.pollOnce.bind(this), this.interval);\n  }\n\n  private async pollOnce() {\n    const api = this.api();\n    const responses = await this.session.request(api.method, api.url, {\n      offset: this.responseWindow.start,\n      discardPrevious: true,\n      id: this.queueId,\n    });\n    // No responses so exit. Can remove once this is resolved:\n    // https://github.com/oasislabs/developer-gateway/issues/23\n    if (!responses.events) {\n      if (Date.now() - this.lastResponseTs >= PollingService.IDLE_TIMELAPSE) {\n        this.stop();\n      }\n      return;\n    }\n\n    this.lastResponseTs = Date.now();\n\n    responses.events.forEach((r: any) => {\n      this.responses.emit(this.topic(r), r);\n      this.responseWindow.slide(r.id, r);\n      if (this.responseWindow.isClosed()) {\n        this.stop();\n      }\n    });\n  }\n\n  /**\n   * Force stops the polling service.\n   */\n  public stop() {\n    clearInterval(this.polling);\n    this.polling = undefined;\n  }\n\n  public subscribe(requestId: number, callback: Function) {\n    if (this.polling) {\n      throw new Error('cannot make a new subscription when already polling');\n    }\n    this.responses.addListener(SubscribeTopic, callback);\n    this.start();\n  }\n\n  /**\n   * @returns the DeveloperGatewayApi currently being polled.\n   */\n  private api(): DeveloperGatewayApi {\n    return this.queueId !== undefined ? SubscribePollApi : ServicePollApi;\n  }\n\n  /**\n   * @returns the topic to publish the given response to.\n   */\n  private topic(response: Event): string {\n    return this.queueId !== undefined ? SubscribeTopic : `${response.id}`;\n  }\n}\n\nexport type PollingServiceOptions = {\n  url: string;\n  session: Http;\n  queueId?: number;\n  interval?: number;\n};\n\nclass Window<T> {\n  /**\n   * Collected elements in this window. Maps element id to element.\n   */\n  private collected: Map<number, T> = new Map();\n\n  /**\n   * start is the offset of the first element in the window we want.\n   */\n  public start: number;\n\n  /**\n   * end is the offset of the last element in the window we want, exclusive.\n   */\n  public end: number;\n\n  constructor(start?: number, end?: number) {\n    this.start = start !== undefined ? start : -1;\n    this.end = end !== undefined ? end : -1;\n  }\n\n  /**\n   * Extend the window to wait for the given element id.\n   */\n  public extend(id: number) {\n    // First time extending so set the start as well.\n    if (this.isClosed()) {\n      this.start = id;\n      this.end = id + 1;\n    }\n    // Push out the edge of the window.\n    else if (id >= this.end) {\n      this.end = id + 1;\n    }\n  }\n\n  /**\n   * Slide accrues the given item into the cache and advances the window start\n   * if it's the next contiguous item.\n   */\n  public slide(id: number, item: T) {\n    this.collected.set(id, item);\n    if (id === this.start) {\n      let start = this.start;\n      for (let k = start; k < this.end; k += 1) {\n        if (this.collected.get(k)) {\n          this.start += 1;\n        } else {\n          break;\n        }\n      }\n    }\n    if (this.start > this.end) {\n      this.end = this.start + 1;\n    }\n  }\n\n  /**\n   * @returns true when all elements in this window have been collected.\n   */\n  public isClosed(): boolean {\n    return this.start === this.end;\n  }\n\n  /**\n   * @returns the item at the given window slot id.\n   */\n  public item(id: number): T | undefined {\n    return this.collected.get(id);\n  }\n}\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","module.exports = require('./lib/axios');","import axios from 'axios';\n\n/**\n * HttpHeaders that can be sent on an http request\n */\nexport type HttpHeaders = {\n  headers: Map<string, string>;\n};\n\n/**\n * Http interface for making http requests to the developer gateway.\n */\nexport interface Http {\n  request(method: string, api: string, body: Object): Promise<any>;\n}\n\n/**\n * HttpClient for underlying http client implementations\n */\nexport interface HttpClient {\n  request(\n    method: string,\n    url: string,\n    data: Object,\n    headers: HttpHeaders\n  ): Promise<any>;\n}\n\n/**\n * AxiosClient is an implementation of an HttpClient using the\n * axios library as the underlying implementation\n */\nexport class AxiosClient implements HttpClient {\n  public request(\n    method: string,\n    url: string,\n    data: Object,\n    httpHeaders: HttpHeaders\n  ): Promise<any> {\n    const headers: Object = {};\n    httpHeaders.headers.forEach(\n      (value, key) => ((headers as any)[key] = value)\n    );\n    return axios.request({ method, url, data, headers });\n  }\n}\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","import { AxiosClient, HttpClient, HttpHeaders, Http } from './http';\n\nimport * as _uuid from 'uuid';\n\nlet uuid: any = undefined;\nlet URL: any = undefined;\n\n// Browser.\n/* tslint:disable */\nif (typeof window !== 'undefined') {\n  // @ts-ignore\n  uuid = _uuid.default;\n  URL = window.URL;\n}\n// Node.\nelse {\n  uuid = require('uuid');\n  URL = require('url').URL;\n}\n\nexport class HttpSession implements Http {\n  /**\n   * session key passed to the developer gateway in the header.\n   */\n  private sessionKey: string;\n\n  /**\n   * headers are the default headers that the session will use for all\n   * http requests\n   */\n  private headers: HttpHeaders;\n\n  /**\n   * underlying http client for the http requests\n   */\n  private client: HttpClient;\n\n  public constructor(\n    public url: string,\n    public apiToken: string,\n    headers: HttpHeaders,\n    client?: HttpClient\n  ) {\n    this.sessionKey = uuid.v4();\n    this.headers = headers;\n    this.headers =\n      this.headers && this.headers.headers\n        ? this.headers\n        : { headers: new Map() };\n    this.client = client ? client : new AxiosClient();\n  }\n\n  public async request(\n    method: string,\n    api: string,\n    body: Object\n  ): Promise<any> {\n    const url = new URL(api, this.url).href;\n    const headers: HttpHeaders = { headers: new Map() };\n    headers.headers.set('X-OASIS-INSECURE-AUTH', '1');\n    headers.headers.set('X-OASIS-LOGIN-TOKEN', this.apiToken);\n    headers.headers.set('X-OASIS-SESSION-KEY', this.sessionKey);\n    headers.headers.set('Content-type', 'application/json');\n\n    this.headers.headers.forEach((value, key) =>\n      headers.headers.set(key, value)\n    );\n\n    let response = await this.client.request(method, url, body, headers);\n    return response.data;\n  }\n}\n","import { EventEmitter } from 'eventemitter3';\nimport {\n  OasisGateway,\n  RpcRequest,\n  RpcResponse,\n  SubscribeRequest,\n  SubscribeFilter,\n  UnsubscribeRequest,\n  SubscribeTopic,\n  DeployRequest,\n  DeployResponse,\n  PublicKeyRequest,\n  PublicKeyResponse,\n  GetCodeRequest,\n  GetCodeResponse,\n} from '@oasislabs/service';\nimport { bytes } from '@oasislabs/common';\nimport PollingService from './polling';\nimport {\n  Event,\n  ExecuteServiceEvent,\n  ErrorEvent,\n  PublicKeyEvent,\n  DeployEvent,\n  DeployApi,\n  DeveloperGatewayApi,\n  RpcApi,\n  PublicKeyApi,\n  SubscribeApi,\n  ServicePollApi,\n  SubscribePollApi,\n  GetCodeApi,\n  HealthApi,\n  UnsubscribeApi,\n} from './api';\nimport { HttpHeaders, Http } from './http';\nimport { HttpSession } from './session';\n\n// Re-export.\nexport {\n  Http,\n  HttpGateway,\n  ServicePollApi,\n  SubscribeApi,\n  SubscribePollApi,\n  GetCodeApi,\n  PollingService,\n};\n\nexport default class Gateway implements OasisGateway {\n  private inner: OasisGateway;\n\n  public connectionState: any = new EventEmitter();\n\n  constructor(url: string, apiToken: string, headers: HttpHeaders) {\n    // TODO: WebSocket gateway and extract protocol from url.\n    this.inner = new HttpGateway(url, apiToken, headers);\n  }\n\n  public async deploy(request: DeployRequest): Promise<DeployResponse> {\n    return this.inner.deploy(request);\n  }\n\n  public async rpc(request: RpcRequest): Promise<RpcResponse> {\n    return this.inner.rpc(request);\n  }\n\n  public subscribe(request: SubscribeRequest): any {\n    return this.inner.subscribe(request);\n  }\n\n  public unsubscribe(request: UnsubscribeRequest) {\n    return this.inner.unsubscribe(request);\n  }\n\n  public async publicKey(\n    request: PublicKeyRequest\n  ): Promise<PublicKeyResponse> {\n    return this.inner.publicKey(request);\n  }\n\n  public async getCode(request: GetCodeRequest): Promise<GetCodeResponse> {\n    return this.inner.getCode(request);\n  }\n\n  public disconnect() {\n    this.inner.disconnect();\n  }\n\n  public hasSigner(): boolean {\n    return this.inner.hasSigner();\n  }\n}\n\nclass HttpGateway implements OasisGateway {\n  /**\n   * http makes network requests to the gateway.\n   */\n  private session: Http;\n\n  /**\n   * polling collects all non-subscribe responses from the developer gateway.\n   */\n  private polling: PollingService;\n\n  /**\n   * Maps event name to the polling service queueId. One for each subscription.\n   */\n  private subscriptions: Map<string, number>;\n\n  private connectionStateDummy = new EventEmitter();\n\n  public constructor(\n    private url: string,\n    private apiToken: string,\n    private headers: HttpHeaders\n  ) {\n    this.session = new HttpSession(url, apiToken, headers);\n    this.polling = PollingService.instance({\n      url: url,\n      session: this.session,\n    });\n    this.subscriptions = new Map();\n  }\n\n  /**\n   * Sanity check that the gateway is constructed with the correct url.\n   */\n  private assertGatewayIsResponsive(url: string): Promise<undefined> {\n    return new Promise(async (resolve, reject) => {\n      let timeout = setTimeout(() => {\n        reject(new Error(`Couldn't connect to gateway ${url}`));\n      }, 3000);\n\n      try {\n        await this.session.request(HealthApi.method, HealthApi.url, {});\n      } catch (e) {\n        if (e.message !== 'Request failed with status code 404') {\n          reject(e);\n        } else {\n          clearTimeout(timeout);\n          resolve();\n        }\n      }\n    });\n  }\n\n  public async deploy(request: DeployRequest): Promise<DeployResponse> {\n    let e = await this.postAndPoll(DeployApi, {\n      data: bytes.toHex(request.data),\n    });\n    let event = e as DeployEvent;\n    let address = bytes.parseHex(event.address);\n    return { address };\n  }\n\n  public async rpc(request: RpcRequest): Promise<RpcResponse> {\n    if (request.options) {\n      throw new Error(\n        'transaction options are not allowed by the developer gateway'\n      );\n    }\n    let event = await this.postAndPoll(RpcApi, {\n      data: bytes.toHex(request.data),\n      address: bytes.toHex(request.address!),\n    });\n    // todo: the developer gateway should have an error if the transaction\n    //       reverted.\n    return {\n      output: (event as ExecuteServiceEvent).output,\n    };\n  }\n\n  // TODO: this should be typed to return an event emitter once we address\n  //       https://github.com/oasislabs/oasis-client/issues/25\n  public subscribe(request: SubscribeRequest): any {\n    let events = new EventEmitter();\n    this.session\n      .request(SubscribeApi.method, SubscribeApi.url, {\n        events: ['logs'],\n        filter: urlEncodeFilter(request.filter!),\n      })\n      .then(response => {\n        if (response.id === undefined || response.id === null) {\n          throw new Error(`subscription failed: ${response}`);\n        }\n        // Store the event -> queueId mapping so that we can unsubscribe later.\n        this.subscriptions.set(request.event, response.id);\n        PollingService.instance({\n          url: this.url,\n          session: this.session,\n          queueId: response.id,\n        }).subscribe(response.id, (event: any) => {\n          events.emit(request.event, event);\n        });\n      })\n      .catch(err => {\n        events.emit('error', err);\n      });\n\n    return events;\n  }\n\n  public unsubscribe(request: UnsubscribeRequest) {\n    let queueId = this.subscriptions.get(request.event);\n    if (queueId === undefined) {\n      throw new Error(`no subscriptions exist for ${JSON.stringify(request)}`);\n    }\n\n    // Cleanup the client's subscription.\n    PollingService.instance({\n      url: this.url,\n      session: this.session,\n      queueId,\n    }).stop();\n    this.subscriptions.delete(request.event);\n\n    // Cleanup the gateway's subscription.\n    this.session\n      .request(UnsubscribeApi.method, UnsubscribeApi.url, {\n        id: queueId,\n      })\n      .catch(err => {\n        console.error(`Error unsubscribing from gateway: ${err}`);\n      });\n  }\n\n  public async publicKey(\n    request: PublicKeyRequest\n  ): Promise<PublicKeyResponse> {\n    const response = await this.session.request(\n      PublicKeyApi.method,\n      PublicKeyApi.url,\n      {\n        address: bytes.toHex(request.address!),\n      }\n    );\n\n    let event: PublicKeyEvent = response as PublicKeyEvent;\n\n    // TODO: validate signature\n    //       https://github.com/oasislabs/oasis-client/issues/39\n\n    let publicKey = event.publicKey\n      ? bytes.parseHex(event.publicKey)\n      : undefined;\n    return { publicKey };\n  }\n\n  /**\n   * Performs the asynchronous developer gateway request by posting a request\n   * and then polling for the response.\n   */\n  private async postAndPoll(\n    api: DeveloperGatewayApi,\n    body: Object\n  ): Promise<Event> {\n    const response = await this.session.request(api.method, api.url, body);\n    let event = await this.polling.response(response.id);\n    if ((event as ErrorEvent).cause) {\n      throw new Error(`poll error: ${JSON.stringify(event)}`);\n    }\n    return event;\n  }\n\n  public async getCode(request: GetCodeRequest): Promise<GetCodeResponse> {\n    let response = await this.session.request(\n      GetCodeApi.method,\n      GetCodeApi.url,\n      {\n        address: bytes.toHex(request.address!),\n      }\n    );\n    return {\n      code: bytes.parseHex(response.code),\n    };\n  }\n\n  public disconnect() {\n    // no-op\n  }\n\n  // todo: change any to EventEmitter.\n  //       https://github.com/oasislabs/oasis-client/issues/25\n  public connectionState(): any {\n    // `deploy` et al. don't hide connection problems, so no need to emit these events.\n    return this.connectionStateDummy;\n  }\n\n  public hasSigner(): boolean {\n    return false;\n  }\n}\n\nfunction urlEncodeFilter(filter: SubscribeFilter): string {\n  return (\n    `address=${bytes.toHex(filter.address)}` +\n    '&' +\n    filter.topics.map((t: string) => 'topic=' + t).join('&')\n  );\n}\n"],"names":["extendStatics","__extends","define","this","_cborJs.default","cborJs","parseHex","toHex","parseNumber","concat","decodeUtf8","encodeUtf8","toNumber","assertLength","InvalidBytesError","utils","Z_FIXED","Z_UNKNOWN","LENGTH_CODES","LITERALS","L_CODES","D_CODES","BL_CODES","HEAP_SIZE","MAX_BITS","MIN_MATCH","MAX_MATCH","msg","zero","adler32","crc32","Z_NO_FLUSH","Z_FINISH","Z_OK","Z_STREAM_END","Z_DEFAULT_COMPRESSION","Z_DEFAULT_STRATEGY","Z_DEFLATED","ZStream","zlib_deflate","deflate","CODES","LENS","DISTS","Z_BLOCK","Z_STREAM_ERROR","Z_DATA_ERROR","Z_BUF_ERROR","TYPE","BAD","ENOUGH_LENS","ENOUGH_DISTS","MAX_WBITS","inflate_table","inflate_fast","toString","zlib_inflate","c","GZheader","inflate","require$$0","require","_nacl.default","QuickLru","global","EventEmitter","isObject","encode","cookies","require$$1","defaults","InterceptorManager","Cancel","Axios","require$$2","require$$3","axios","rng","bytesToUuid","v4","v1","uuid","_uuid.default"],"mappings":"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AE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;;MAErF,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE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B,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;;MAEpB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;MACzB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;;MAEzB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;MACzB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;;MAEzB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;;MAEzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;;MAEzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;;MAEzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;;MAEzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;;MAEzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;;MAEzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;;MAEzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC,EAAE,CAAC,GAAG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AG,IAAI,GAAG,EAAE;UAChF,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;UAChF,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;;MAErF,IAAI,EAAE,GAAG,EAA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AAC,IAAI,MAAM,CAAC;MAC7F,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAC;MAC7F,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAC;MAC7F,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,IAAI,MAAM,CAAC;MAC7F,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,KAAK,MAAM,CAAC;MACnC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAC;MAC7F,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAC;MAC7F,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAC;MAC7F,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,KAAK,MAAM,CAAC;;MAEnC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;MACrD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;MACrD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;MACrD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;MACrD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;MACrD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;MACrD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;MACrD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI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C,CAAC,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,wBAAwB,MAAM,CAAC;MAClF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,wBAAwB,MAAM,CAAC;MAClF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,wBAAwB,MAAM,CAAC;MAClF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,wBAAwB,MAAM,CAAC;MAClF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,MAAM,CAAC;MAClF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,wBAAwB,MAAM,CAAC;MAClF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,wBAAwB,MAAM,CAAC;MAClF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK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,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACV,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACV,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACV,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACV,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACV,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACV,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;MACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;;MAEf,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;MAChB,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;MAChB,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;MAChB,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;MAChB,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;MAChB,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;MAChB,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;MAChB,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;MAChB,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;MAChB,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;MAChB,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC;MAChB,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC;MAChB,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC;MAChB,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC;MAChB,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC;;;;MAIhB,CAAC,GAAG,CAAC,CAAC;MACN,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;;MAGvB,CAAC,GAAG,CAAC,CAAC;MACN,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;MACpE,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEvB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;MACX,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;MACX,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;MACX,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;MACX,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;MACX,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;MACX,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;MACX,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;MACX,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;MACX,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;MACX,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;MACZ,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;MACZ,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;MACZ,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;MACZ,CAAC,CAAC,EAA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AE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;UACjjF,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;UAC1B,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;UAC1C,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;UAC1C,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;UAC1C,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;UAC1C,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;UAC1C,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;UAC1C,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;UAC1C,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;UAC1C,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;UAC1C,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;UAE1C,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;UACnC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;UACnC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;UACV,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;UACV,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;UACnC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;UACnC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;UACV,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;UACV,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;UACnC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;UACnC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;UACV,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;UACV,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;UACnC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;UACnC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;UACV,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;UACV,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;UACnC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;UACnC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;UACV,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;UACV,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UACX,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;;UAEX,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;UACV,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;UACV,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACrC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACrC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;UAClC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;UAClC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACrC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACrC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACrC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACrC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;UAClC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;UAClC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACrC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACrC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;UAClC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;UAClC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;UACpC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;UAClC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;UAClC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACrC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACrC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;UACpC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;;UAEpC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;UACvB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;UACvB,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;UACvB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;UACvB,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;UACvB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;UACvB,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;UACvB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;UACvB,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;UAC3B,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;UACvB,CA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"}