{"remainingRequest":"/home/sj/Documents/ballot/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sj/Documents/ballot/app/src/views/Results.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sj/Documents/ballot/app/src/views/Results.vue","mtime":1569759026618},{"path":"/home/sj/Documents/ballot/app/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/sj/Documents/ballot/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sj/Documents/ballot/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions } from 'vuex';\n\nexport default {\n  name: 'Results',\n  async created () {\n    if (!this.$route.query.id) {\n      return;\n    }\n    await this.loadService(this.$route.query.id);\n\n    // Check if the vote is closed, and redirect to vote page if it's not\n    const open = await this.getOpen();\n    if (open) {\n      this.$router.push({ name: 'vote', query: this.$route.query });\n      return;\n    }\n\n    this.question = await this.getDescription();\n\n    const labels = await this.getCandidates();\n    const series = await this.getResults();\n\n    // Process results\n    const totalVotes = series.reduce((total, votes) => total + votes, 0);\n    const zip = series\n      .map((count, index) => [labels[index], count])\n      .sort((a, b) => b[1] - a[1]);\n\n    // Initialize results chart\n    this.chartOptions = {\n      ...this.chartOptions,\n      ...{\n        labels: zip.map(pair => pair[0])\n      },\n    };\n    this.series = zip.map(pair => pair[1] * 100 / totalVotes);\n  },\n  data () {\n    return {\n      question: '',\n      series: [],\n      chartOptions: {\n        chart: {\n          events: {\n            dataPointMouseEnter: (_event, _chartContext, config) => {\n\n            },\n            dataPointMouseLeave: (event, chartContext, config) => {\n\n            },\n          },\n        },\n        labels: [],\n        legend: {\n          show: false,\n        },\n        plotOptions: {\n          pie: {\n            dataLabels: {\n              minAngleToShowLabel: 361,\n            },\n          },\n        },\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 170,\n            },\n            legend: {\n              show: false,\n            },\n          },\n        }],\n        tooltip: {\n          fillSeriesColor: false,\n          y: {\n            formatter: (value) => {\n              return `${value}%`;\n            },\n          },\n        },\n        theme: {\n          monochrome: {\n            enabled: true,\n            color: '#ff4212',\n            shadeIntensity: 0.9,\n          },\n        },\n      },\n    };\n  },\n  methods: {\n    ...mapActions([\n      'loadService',\n      'getDescription',\n      'getCandidates',\n      'getOpen',\n      'getResults',\n    ]),\n  },\n};\n",{"version":3,"sources":["Results.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Results.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container id=\"Results_Container\" fill-height>\n    <v-card\n      id=\"Results_Card\"\n      flat\n    >\n      <v-card-title id=\"Results_Title\" class=\"justify-center\">\n        Result\n      </v-card-title>\n\n      <v-card-text>\n        <v-apex-chart\n          align=\"center\"\n          width=\"250\"\n          type=\"pie\"\n          :options=\"chartOptions\"\n          :series=\"series\"\n        ></v-apex-chart>\n\n        <div id=\"Results_Question\" class=\"pb-4\">\n          <b>Question:</b> <br />\n          {{ question }}\n        </div>\n\n        <div class=\"Results_ResultsContainer\" ref=\"ResultsContainer\">\n          <template\n            v-for=\"(option, index) of chartOptions.labels\"\n            class=\"Results_Template\"\n          >\n            <div\n              class=\"Results_Result pl-5 pa-2 pt-1\"\n              :key=\"'result-' + index\"\n            >\n              <div class=\"Results_Number Results_Text pr-4\">#{{ index + 1 }}</div>\n              <div class=\"Results_Option Results_Text pt-2\">{{ option }}</div>\n              <div class=\"Results_Score Results_Text pt-2 pr-5\">{{ series[index] }}%</div>\n            </div>\n            <v-divider\n              class=\"Results_Divider\"\n              :key=\"'divider-' + index\"\n            ></v-divider>\n          </template>\n        </div>\n      </v-card-text>\n    </v-card>\n  </v-container>\n</template>\n\n<script>\nimport { mapActions } from 'vuex';\n\nexport default {\n  name: 'Results',\n  async created () {\n    if (!this.$route.query.id) {\n      return;\n    }\n    await this.loadService(this.$route.query.id);\n\n    // Check if the vote is closed, and redirect to vote page if it's not\n    const open = await this.getOpen();\n    if (open) {\n      this.$router.push({ name: 'vote', query: this.$route.query });\n      return;\n    }\n\n    this.question = await this.getDescription();\n\n    const labels = await this.getCandidates();\n    const series = await this.getResults();\n\n    // Process results\n    const totalVotes = series.reduce((total, votes) => total + votes, 0);\n    const zip = series\n      .map((count, index) => [labels[index], count])\n      .sort((a, b) => b[1] - a[1]);\n\n    // Initialize results chart\n    this.chartOptions = {\n      ...this.chartOptions,\n      ...{\n        labels: zip.map(pair => pair[0])\n      },\n    };\n    this.series = zip.map(pair => pair[1] * 100 / totalVotes);\n  },\n  data () {\n    return {\n      question: '',\n      series: [],\n      chartOptions: {\n        chart: {\n          events: {\n            dataPointMouseEnter: (_event, _chartContext, config) => {\n\n            },\n            dataPointMouseLeave: (event, chartContext, config) => {\n\n            },\n          },\n        },\n        labels: [],\n        legend: {\n          show: false,\n        },\n        plotOptions: {\n          pie: {\n            dataLabels: {\n              minAngleToShowLabel: 361,\n            },\n          },\n        },\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 170,\n            },\n            legend: {\n              show: false,\n            },\n          },\n        }],\n        tooltip: {\n          fillSeriesColor: false,\n          y: {\n            formatter: (value) => {\n              return `${value}%`;\n            },\n          },\n        },\n        theme: {\n          monochrome: {\n            enabled: true,\n            color: '#ff4212',\n            shadeIntensity: 0.9,\n          },\n        },\n      },\n    };\n  },\n  methods: {\n    ...mapActions([\n      'loadService',\n      'getDescription',\n      'getCandidates',\n      'getOpen',\n      'getResults',\n    ]),\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '~oasis-style/oasis.scss';\n\n#Results_Card {\n  background-color: $background-light-gray;\n\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n#Results_Container {\n  position: relative;\n  top: 5vh;\n}\n\n#Results_Question {\n  font-family: Sul Sans;\n  font-size: 14px;\n  line-height: 16px;\n  text-align: center;\n\n  color: #c3c9cd;\n\n  mix-blend-mode: normal;\n}\n\n#Results_Title {\n  font-family: Sul Sans;\n  font-size: 28px;\n  font-weight: bold;\n  line-height: 33px;\n\n  text-transform: uppercase;\n  letter-spacing: 2px;\n\n  color: #334857;\n}\n\n.Results_Number {\n  float: left;\n\n  font-family: Sul Sans;\n  font-size: 28px;\n  font-weight: bold;\n  line-height: 33px;\n\n  color: #334857;\n}\n\n.Results_Option {\n  float: left;\n\n  font-family: Sul Sans;\n  font-size: 16px;\n  line-height: 19px;\n\n  color: #334857;\n}\n\n.Results_Result {\n  height: 56px;\n  width: 480px;\n  max-width: 80vw;\n\n  width: 100%;\n  margin: 0 auto;\n}\n\n.Results_ResultsContainer {\n  width: 500px;\n  max-width: 80vw;\n}\n\n.Results_ResultsContainer:hover .Results_Text {\n  opacity: 0.33;\n}\n\n.Results_Result:hover .Results_Text {\n  opacity: 1.00;\n}\n\n.Results_Score {\n  float: right;\n\n  font-family: Sul Sans;\n  font-size: 16px;\n  line-height: 19px;\n  text-align: center;\n\n  color: #334857;\n}\n</style>\n"]}]}